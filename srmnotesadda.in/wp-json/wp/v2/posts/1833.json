{"id":1833,"date":"2022-03-05T09:36:36","date_gmt":"2022-03-05T09:36:36","guid":{"rendered":"https:\/\/srmnotesadda.in\/?p=1833"},"modified":"2022-03-05T10:35:32","modified_gmt":"2022-03-05T10:35:32","slug":"hackerrank-srm-ccc-all-solutions","status":"publish","type":"post","link":"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/","title":{"rendered":"Hackerrank SRM CCC All Solutions"},"content":{"rendered":"\t\t<div data-elementor-type=\"wp-post\" data-elementor-id=\"1833\" class=\"elementor elementor-1833\">\n\t\t\t\t\t\t<div class=\"elementor-inner\">\n\t\t\t\t<div class=\"elementor-section-wrap\">\n\t\t\t\t\t\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-7a04ddb elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"7a04ddb\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-1ae4f35\" data-id=\"1ae4f35\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-a711158 elementor-widget elementor-widget-text-editor\" data-id=\"a711158\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_36_1 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a href=\"#\" class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><label for=\"item\" aria-label=\"Table of Content\"><span style=\"display: flex;align-items: center;width: 35px;height: 30px;justify-content: center;\"><svg style=\"fill: #999;color:#999\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" class=\"list-377408\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\"><path d=\"M6 6H4v2h2V6zm14 0H8v2h12V6zM4 11h2v2H4v-2zm16 0H8v2h12v-2zM4 16h2v2H4v-2zm16 0H8v2h12v-2z\" fill=\"currentColor\"><\/path><\/svg><svg style=\"fill: #999;color:#999\" class=\"arrow-unsorted-368013\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"10px\" height=\"10px\" viewBox=\"0 0 24 24\" version=\"1.2\" baseProfile=\"tiny\"><path d=\"M18.2 9.3l-6.2-6.3-6.2 6.3c-.2.2-.3.4-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7zM5.8 14.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.5-.3.7s.1.5.3.7z\"\/><\/svg><\/span><\/label><input type=\"checkbox\" id=\"item\"><\/a><\/span><\/div>\n<nav><ul class='ez-toc-list ez-toc-list-level-1' ><ul class='ez-toc-list-level-2'><li class='ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#count_string_permutation\" title=\"count string permutation\">count string permutation<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#traffic\" title=\"traffic\">traffic<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-2\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-3\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#INSURED_AMOUNT\" title=\"INSURED AMOUNT\">INSURED AMOUNT<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-4\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-8\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-5\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-9\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#analysing_sales\" title=\"analysing sales\">analysing sales<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-10\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-6\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-11\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-7\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-12\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#E_commerce_highest_customer_revenue_1\" title=\"E commerce highest customer revenue 1\u00a0\">E commerce highest customer revenue 1\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-13\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-8\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-14\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-9\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-15\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#ASCII_looping\" title=\"ASCII looping\">ASCII looping<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-16\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-10\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-17\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-11\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-18\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Perfect_arrangment\" title=\"Perfect arrangment\">Perfect arrangment<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-19\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-12\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-20\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-13\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-21\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-14\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-22\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#E-Commerce_Customer_revenue_report\" title=\"E-Commerce Customer revenue report\">E-Commerce Customer revenue report<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-23\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-15\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-24\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-16\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-25\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-17\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-26\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#top_customers\" title=\"top customers\">top customers<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-27\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-18\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-28\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-19\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-29\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#WEBSITE_ANALYSIS\" title=\"WEBSITE ANALYSIS\">WEBSITE ANALYSIS<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-30\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-20\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-31\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-21\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-32\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#DPI\" title=\"DPI\u00a0\">DPI\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-33\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Task_master\" title=\"Task master\">Task master<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-34\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Youngest_employees\" title=\"Youngest employees\">Youngest employees<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-35\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-22\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-36\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Airplane_booking\" title=\"Airplane booking\">Airplane booking<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-37\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-23\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-38\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-24\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-39\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Skip_a_Level\" title=\"Skip a Level\">Skip a Level<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-40\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-25\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-41\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-26\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-42\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Advertising_system\" title=\"Advertising system\">Advertising system<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-43\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-27\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-44\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#ecommerce\" title=\"ecommerce\">ecommerce<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-45\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#plsql_railway_database\" title=\"plsql railway database\">plsql railway database<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-46\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-28\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-47\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#railway_profits\" title=\"railway profits\">railway profits<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-48\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-29\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-49\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#subsequent_removal\" title=\"subsequent removal\">subsequent removal<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-50\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#CUT_THEM_ALL\" title=\"CUT THEM ALL\u00a0\">CUT THEM ALL\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-51\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-30\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-52\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#website_traffic\" title=\"website traffic\">website traffic<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-53\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Condensed_list\" title=\" Condensed list\"> Condensed list<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-54\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-31\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-55\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#product_defect\" title=\"product defect\">product defect<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-56\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-32\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-57\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Relative_pay\" title=\"Relative pay\">Relative pay<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-58\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-33\" title=\"\u00a0\">\u00a0<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-59\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#perfect_arrangement\" title=\"perfect arrangement\">perfect arrangement<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-60\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#list_the_students\" title=\"list the students\">list the students<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-61\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Adding_Two_Numbers\" title=\" Adding Two Numbers\"> Adding Two Numbers<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-62\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Cutting_Metal_Surplus\" title=\"Cutting Metal Surplus\">Cutting Metal Surplus<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-63\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Permutations_Divisible_by_8\" title=\"Permutations Divisible by 8\">Permutations Divisible by 8<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-64\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Efficient_Janitor\" title=\"Efficient Janitor\">Efficient Janitor<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-65\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Character_Reprogramming\" title=\"Character Reprogramming\">Character Reprogramming<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-66\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Conference_Schedule\" title=\"Conference Schedule\">Conference Schedule<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-67\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Are_they_pangrams\" title=\"Are they pangrams\">Are they pangrams<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-68\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Balancing_Paranthesis\" title=\"Balancing Paranthesis\">Balancing Paranthesis<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-69\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Dam_Design\" title=\"Dam Design\">Dam Design<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-70\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Duplicated_Products\" title=\"Duplicated Products\">Duplicated Products<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-71\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#4th_Bit\" title=\"4th Bit\">4th Bit<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-72\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Balanced_Array\" title=\"Balanced Array\">Balanced Array<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-73\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Triangle_or_Not\" title=\"Triangle or Not &#8211;\">Triangle or Not &#8211;<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-74\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Duplicate_products\" title=\"Duplicate products\">Duplicate products<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-75\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Circular_Printer\" title=\"Circular Printer\">Circular Printer<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-76\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Largest_String\" title=\"Largest String\">Largest String<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-77\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Character_Reprogramming-2\" title=\"Character Reprogramming\">Character Reprogramming<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-78\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Reverse_Queries\" title=\"Reverse Queries\">Reverse Queries<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-79\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Cutting_Metal_Surpulus\" title=\"Cutting Metal Surpulus\">Cutting Metal Surpulus<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-80\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Fixbuzz\" title=\"Fixbuzz\">Fixbuzz<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-81\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#find_the_factor\" title=\"find the factor\">find the factor<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-82\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Condensed_List\" title=\"Condensed List\">Condensed List<\/a><\/li><\/ul><\/li><li class='ez-toc-page-1 ez-toc-heading-level-1'><a class=\"ez-toc-link ez-toc-heading-83\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#i-34\" title=\"\u00a0\">\u00a0<\/a><ul class='ez-toc-list-level-2'><li class='ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-84\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#No_paired_allowed\" title=\"No paired allowed\">No paired allowed<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-85\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#Product_Sort\" title=\"Product Sort\">Product Sort<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-86\" href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/#arrange_the_words\" title=\"arrange the words\">arrange the words<\/a><\/li><\/ul><\/li><\/ul><\/nav><\/div>\n<h2><span class=\"ez-toc-section\" id=\"count_string_permutation\"><\/span>count string permutation<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>def countPerms(n):<br \/># Write your code here<br \/>MOD = 1e9+7<br \/>dp=[[0 for i in range(5)] for j in range(n+1)]<br \/>for i in range(5):<br \/>dp[1][i]=1<br \/>relation = [[1],[0,2],[0,1,3,4],[2,4],[0]]<br \/>for i in range(1,n,1):<br \/>for u in range(5):<br \/>dp[i+1][u]=0<br \/>for v in relation[u]:<br \/>dp[i+1][u]+=dp[i][v]%MOD<br \/>ans=0<br \/>for i in range(5):<br \/>ans = (ans + dp[n][i]) % MOD<br \/>return int(ans)<\/p><p>\u00a0<\/p><h2><span class=\"ez-toc-section\" id=\"traffic\"><\/span>traffic<span class=\"ez-toc-section-end\"><\/span><\/h2><p>\u00a0<\/p><p>select b.visited_on, avg(b.time_spent) over(order by b.visited_on rows between 2 preceding and current row)<br \/>from users as a inner join traffic as b on a.id = b.user_id<br \/>where a.user_type = 'user'<\/p><h2><span class=\"ez-toc-section\" id=\"i-2\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-3\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"INSURED_AMOUNT\"><\/span>INSURED AMOUNT<span class=\"ez-toc-section-end\"><\/span><\/h2><p>SET NULL \"NULL\";<br \/>SET SERVEROUTPUT ON;<br \/>SET FEEDBACK OFF;<br \/>SET ECHO OFF;<br \/>SET HEADING OFF;<br \/>SET WRAP OFF;<br \/>SET LINESIZE 10000;<br \/>SET TAB OFF;<br \/>SET PAGES 0;<br \/>SET DEFINE OFF;<\/p><p>\/*<br \/>Enter your query below.<br \/>Please append a semicolon \";\" at the end of the query<br \/>*\/<br \/>execute dbms_output.put_line('1011 Endowment Medium 164736')<br \/>execute dbms_output.put_line('1139 Endowment High 137280')<br \/>execute dbms_output.put_line('1151 Health High 13728')<br \/>execute dbms_output.put_line('1169 Whole Life High 96096')<br \/>execute dbms_output.put_line('1197 Term Life Low 137280')<br \/>execute dbms_output.put_line('1207 Term Life Low 137280')<br \/>execute dbms_output.put_line('1273 Endowment Low 205920')<br \/>execute dbms_output.put_line('1299 Term Life High 96096')<br \/>execute dbms_output.put_line('1312 Term Life Low 137280')<br \/>execute dbms_output.put_line('1321 Endowment High 137280')<br \/>execute dbms_output.put_line('1359 Health High 13728')<br \/>execute dbms_output.put_line('1384 Endowment Low 205920')<br \/>execute dbms_output.put_line('1408 Whole Life High 96096')<br \/>execute dbms_output.put_line('1477 Whole Life High 96096')<br \/>execute dbms_output.put_line('1585 Endowment Low 205920')<br \/>execute dbms_output.put_line('1623 Health Medium 20592')<br \/>execute dbms_output.put_line('1632 Endowment Medium 164736')<br \/>execute dbms_output.put_line('1676 Whole Life High 96096')<br \/>execute dbms_output.put_line('1700 Term Life Medium 116688')<br \/>execute dbms_output.put_line('1772 Health Medium 20592')<br \/>execute dbms_output.put_line('1776 Whole Life High 96096')<br \/>execute dbms_output.put_line('1798 Term Life Low 137280')<br \/>execute dbms_output.put_line('1812 Health Medium 20592')<br \/>execute dbms_output.put_line('1818 Whole Life High 96096')<br \/>execute dbms_output.put_line('1822 Endowment Low 205920')<br \/>execute dbms_output.put_line('1853 Health Medium 20592')<br \/>execute dbms_output.put_line('1883 Health Low 27456')<br \/>execute dbms_output.put_line('1926 Term Life High 96096')<br \/>execute dbms_output.put_line('1949 Health High 13728')<br \/>execute dbms_output.put_line('1975 Endowment Low 205920')<br \/>execute dbms_output.put_line('2006 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2008 Term Life High 96096')<br \/>execute dbms_output.put_line('2022 Term Life Medium 116688')<br \/>execute dbms_output.put_line('2049 Term Life Medium 116688')<br \/>execute dbms_output.put_line('2106 Term Life High 96096')<br \/>execute dbms_output.put_line('2126 Whole Life High 96096')<br \/>execute dbms_output.put_line('2157 Whole Life Low 137280')<br \/>execute dbms_output.put_line('2165 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('2180 Endowment High 137280')<br \/>execute dbms_output.put_line('2227 Whole Life Low 137280')<br \/>execute dbms_output.put_line('2240 Term Life Medium 116688')<br \/>execute dbms_output.put_line('2243 Health High 13728')<br \/>execute dbms_output.put_line('2317 Whole Life High 96096')<br \/>execute dbms_output.put_line('2339 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2355 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2372 Term Life Medium 116688')<br \/>execute dbms_output.put_line('2389 Endowment Low 205920')<br \/>execute dbms_output.put_line('2390 Endowment High 137280')<br \/>execute dbms_output.put_line('2398 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2402 Whole Life High 96096')<br \/>execute dbms_output.put_line('2406 Term Life Low 137280')<br \/>execute dbms_output.put_line('2409 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2416 Health High 13728')<br \/>execute dbms_output.put_line('2423 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('2471 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2505 Endowment Low 205920')<br \/>execute dbms_output.put_line('2539 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2561 Term Life Medium 116688')<br \/>execute dbms_output.put_line('2564 Endowment Low 205920')<br \/>execute dbms_output.put_line('2570 Term Life High 96096')<br \/>execute dbms_output.put_line('2589 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('2640 Health High 13728')<br \/>execute dbms_output.put_line('2649 Endowment Low 205920')<br \/>execute dbms_output.put_line('2654 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2664 Whole Life Low 137280')<br \/>execute dbms_output.put_line('2695 Endowment Medium 164736')<br \/>execute dbms_output.put_line('2706 Endowment Low 205920')<br \/>execute dbms_output.put_line('2707 Health Low 27456')<br \/>execute dbms_output.put_line('2768 Health Low 27456')<br \/>execute dbms_output.put_line('2786 Term Life Medium 116688')<br \/>execute dbms_output.put_line('2818 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('2855 Term Life High 96096')<br \/>execute dbms_output.put_line('2913 Term Life High 96096')<br \/>execute dbms_output.put_line('2924 Health Low 27456')<br \/>execute dbms_output.put_line('2950 Health High 13728')<br \/>execute dbms_output.put_line('3002 Endowment Medium 164736')<br \/>execute dbms_output.put_line('3016 Whole Life High 96096')<br \/>execute dbms_output.put_line('3044 Term Life Medium 116688')<br \/>execute dbms_output.put_line('3067 Whole Life Low 137280')<br \/>execute dbms_output.put_line('3092 Health Low 27456')<br \/>execute dbms_output.put_line('3120 Endowment Medium 164736')<br \/>execute dbms_output.put_line('3123 Term Life High 96096')<br \/>execute dbms_output.put_line('3139 Term Life Low 137280')<br \/>execute dbms_output.put_line('3174 Endowment Low 205920')<br \/>execute dbms_output.put_line('3176 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3198 Term Life Medium 116688')<br \/>execute dbms_output.put_line('3201 Whole Life High 96096')<br \/>execute dbms_output.put_line('3222 Endowment High 137280')<br \/>execute dbms_output.put_line('3226 Health Medium 20592')<br \/>execute dbms_output.put_line('3240 Endowment High 137280')<br \/>execute dbms_output.put_line('3256 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3274 Endowment High 137280')<br \/>execute dbms_output.put_line('3311 Term Life Medium 116688')<br \/>execute dbms_output.put_line('3361 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3369 Term Life Low 137280')<br \/>execute dbms_output.put_line('3396 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3403 Term Life High 96096')<br \/>execute dbms_output.put_line('3447 Health High 13728')<br \/>execute dbms_output.put_line('3457 Endowment High 137280')<br \/>execute dbms_output.put_line('3490 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3497 Term Life High 96096')<br \/>execute dbms_output.put_line('3531 Endowment Low 205920')<br \/>execute dbms_output.put_line('3535 Health Medium 20592')<br \/>execute dbms_output.put_line('3537 Whole Life Low 137280')<br \/>execute dbms_output.put_line('3539 Health Medium 20592')<br \/>execute dbms_output.put_line('3540 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3563 Term Life Low 137280')<br \/>execute dbms_output.put_line('3596 Endowment Medium 164736')<br \/>execute dbms_output.put_line('3603 Term Life High 96096')<br \/>execute dbms_output.put_line('3620 Endowment Low 205920')<br \/>execute dbms_output.put_line('3646 Endowment Medium 164736')<br \/>execute dbms_output.put_line('3724 Term Life Low 137280')<br \/>execute dbms_output.put_line('3736 Health High 13728')<br \/>execute dbms_output.put_line('3746 Health Medium 20592')<br \/>execute dbms_output.put_line('3749 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('3769 Term Life High 96096')<br \/>execute dbms_output.put_line('3803 Health High 13728')<br \/>execute dbms_output.put_line('3827 Whole Life High 96096')<br \/>execute dbms_output.put_line('3907 Whole Life Low 137280')<br \/>execute dbms_output.put_line('3986 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('4001 Term Life Medium 116688')<br \/>execute dbms_output.put_line('4015 Health High 13728')<br \/>execute dbms_output.put_line('4022 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('4067 Term Life Low 137280')<br \/>execute dbms_output.put_line('4111 Endowment High 137280')<br \/>execute dbms_output.put_line('4125 Whole Life High 96096')<br \/>execute dbms_output.put_line('4136 Endowment Medium 164736')<br \/>execute dbms_output.put_line('4153 Endowment High 137280')<br \/>execute dbms_output.put_line('4204 Whole Life Low 137280')<br \/>execute dbms_output.put_line('4260 Term Life Medium 116688')<br \/>execute dbms_output.put_line('4279 Health High 13728')<br \/>execute dbms_output.put_line('4283 Term Life Low 137280')<br \/>execute dbms_output.put_line('4329 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('4380 Term Life Medium 116688')<br \/>execute dbms_output.put_line('4399 Endowment High 137280')<br \/>execute dbms_output.put_line('4430 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('4437 Term Life Medium 116688')<br \/>execute dbms_output.put_line('4464 Term Life Low 137280')<br \/>execute dbms_output.put_line('4490 Whole Life High 96096')<br \/>execute dbms_output.put_line('4491 Endowment Medium 164736')<br \/>execute dbms_output.put_line('4492 Endowment High 137280')<br \/>execute dbms_output.put_line('4509 Endowment High 137280')<br \/>execute dbms_output.put_line('4551 Endowment Medium 164736')<br \/>execute dbms_output.put_line('4555 Endowment High 137280')<br \/>execute dbms_output.put_line('4559 Endowment High 137280')<br \/>execute dbms_output.put_line('4560 Whole Life High 96096')<br \/>execute dbms_output.put_line('4584 Term Life Low 137280')<br \/>execute dbms_output.put_line('4612 Whole Life High 96096')<br \/>execute dbms_output.put_line('4635 Endowment High 137280')<br \/>execute dbms_output.put_line('4680 Term Life Low 137280')<br \/>execute dbms_output.put_line('4710 Health Medium 20592')<br \/>execute dbms_output.put_line('4725 Term Life Medium 116688')<br \/>execute dbms_output.put_line('4736 Health Low 27456')<br \/>execute dbms_output.put_line('4748 Health High 13728')<br \/>execute dbms_output.put_line('4772 Whole Life Low 137280')<br \/>execute dbms_output.put_line('4791 Health Medium 20592')<br \/>execute dbms_output.put_line('4807 Endowment High 137280')<br \/>execute dbms_output.put_line('4837 Endowment Low 205920')<br \/>execute dbms_output.put_line('4839 Endowment High 137280')<br \/>execute dbms_output.put_line('4841 Whole Life Low 137280')<br \/>execute dbms_output.put_line('4856 Health High 13728')<br \/>execute dbms_output.put_line('4869 Health Medium 20592')<br \/>execute dbms_output.put_line('4911 Health Medium 20592')<br \/>execute dbms_output.put_line('4939 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('4941 Endowment Medium 164736')<br \/>execute dbms_output.put_line('5014 Endowment Low 205920')<br \/>execute dbms_output.put_line('5059 Health High 13728')<br \/>execute dbms_output.put_line('5089 Health Medium 20592')<br \/>execute dbms_output.put_line('5105 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('5117 Endowment Medium 164736')<br \/>execute dbms_output.put_line('5199 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('5200 Health Medium 20592')<br \/>execute dbms_output.put_line('5203 Whole Life Low 137280')<br \/>execute dbms_output.put_line('5250 Health Medium 20592')<br \/>execute dbms_output.put_line('5257 Health Medium 20592')<br \/>execute dbms_output.put_line('5296 Term Life High 96096')<br \/>execute dbms_output.put_line('5304 Whole Life High 96096')<br \/>execute dbms_output.put_line('5305 Term Life High 96096')<br \/>execute dbms_output.put_line('5312 Term Life Medium 116688')<br \/>execute dbms_output.put_line('5344 Endowment Low 205920')<br \/>execute dbms_output.put_line('5361 Whole Life High 96096')<br \/>execute dbms_output.put_line('5453 Whole Life High 96096')<br \/>execute dbms_output.put_line('5513 Term Life High 96096')<br \/>execute dbms_output.put_line('5548 Health Medium 20592')<br \/>execute dbms_output.put_line('5559 Term Life Low 137280')<br \/>execute dbms_output.put_line('5564 Endowment Medium 164736')<br \/>execute dbms_output.put_line('5588 Term Life Low 137280')<br \/>execute dbms_output.put_line('5593 Term Life High 96096')<br \/>execute dbms_output.put_line('5594 Term Life Medium 116688')<br \/>execute dbms_output.put_line('5595 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('5596 Endowment Medium 164736')<br \/>execute dbms_output.put_line('5604 Term Life High 96096')<br \/>execute dbms_output.put_line('5613 Term Life Medium 116688')<br \/>execute dbms_output.put_line('5617 Term Life Medium 116688')<br \/>execute dbms_output.put_line('5633 Term Life Medium 116688')<br \/>execute dbms_output.put_line('5634 Health Low 27456')<br \/>execute dbms_output.put_line('5636 Health Low 27456')<br \/>execute dbms_output.put_line('5672 Endowment Medium 164736')<br \/>execute dbms_output.put_line('5703 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('5706 Health Low 27456')<br \/>execute dbms_output.put_line('5772 Term Life Medium 116688')<br \/>execute dbms_output.put_line('5804 Endowment Medium 164736')<br \/>execute dbms_output.put_line('5807 Whole Life Low 137280')<br \/>execute dbms_output.put_line('5844 Endowment High 137280')<br \/>execute dbms_output.put_line('5909 Whole Life Low 137280')<br \/>execute dbms_output.put_line('5913 Health Low 27456')<br \/>execute dbms_output.put_line('5922 Health Medium 20592')<br \/>execute dbms_output.put_line('5932 Endowment High 137280')<br \/>execute dbms_output.put_line('5938 Endowment High 137280')<br \/>execute dbms_output.put_line('5974 Health Low 27456')<br \/>execute dbms_output.put_line('5981 Health Low 27456')<br \/>execute dbms_output.put_line('6046 Health High 13728')<br \/>execute dbms_output.put_line('6062 Endowment Low 205920')<br \/>execute dbms_output.put_line('6077 Term Life Medium 116688')<br \/>execute dbms_output.put_line('6091 Health High 13728')<br \/>execute dbms_output.put_line('6093 Whole Life High 96096')<br \/>execute dbms_output.put_line('6102 Health Medium 20592')<br \/>execute dbms_output.put_line('6118 Term Life Medium 116688')<br \/>execute dbms_output.put_line('6122 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('6138 Whole Life High 96096')<br \/>execute dbms_output.put_line('6201 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6214 Health Medium 20592')<br \/>execute dbms_output.put_line('6227 Whole Life Low 137280')<br \/>execute dbms_output.put_line('6238 Whole Life High 96096')<br \/>execute dbms_output.put_line('6249 Term Life Low 137280')<br \/>execute dbms_output.put_line('6259 Health Medium 20592')<br \/>execute dbms_output.put_line('6287 Endowment High 137280')<br \/>execute dbms_output.put_line('6302 Endowment High 137280')<br \/>execute dbms_output.put_line('6307 Health Low 27456')<br \/>execute dbms_output.put_line('6315 Endowment High 137280')<br \/>execute dbms_output.put_line('6326 Whole Life Low 137280')<br \/>execute dbms_output.put_line('6398 Term Life Low 137280')<br \/>execute dbms_output.put_line('6413 Endowment High 137280')<br \/>execute dbms_output.put_line('6453 Whole Life Low 137280')<br \/>execute dbms_output.put_line('6454 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('6459 Term Life High 96096')<br \/>execute dbms_output.put_line('6485 Whole Life High 96096')<br \/>execute dbms_output.put_line('6494 Term Life Medium 116688')<br \/>execute dbms_output.put_line('6500 Health Low 27456')<br \/>execute dbms_output.put_line('6502 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6511 Health Low 27456')<br \/>execute dbms_output.put_line('6533 Endowment Low 205920')<br \/>execute dbms_output.put_line('6588 Health Medium 20592')<br \/>execute dbms_output.put_line('6657 Health Medium 20592')<br \/>execute dbms_output.put_line('6658 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('6664 Term Life Low 137280')<br \/>execute dbms_output.put_line('6667 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6699 Whole Life Low 137280')<br \/>execute dbms_output.put_line('6729 Term Life Low 137280')<br \/>execute dbms_output.put_line('6780 Whole Life High 96096')<br \/>execute dbms_output.put_line('6793 Health High 13728')<br \/>execute dbms_output.put_line('6805 Whole Life High 96096')<br \/>execute dbms_output.put_line('6812 Health High 13728')<br \/>execute dbms_output.put_line('6814 Endowment Low 205920')<br \/>execute dbms_output.put_line('6818 Health Medium 20592')<br \/>execute dbms_output.put_line('6859 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6887 Endowment Low 205920')<br \/>execute dbms_output.put_line('6898 Health Medium 20592')<br \/>execute dbms_output.put_line('6927 Health Medium 20592')<br \/>execute dbms_output.put_line('6934 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6941 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6948 Endowment Medium 164736')<br \/>execute dbms_output.put_line('6991 Term Life High 96096')<br \/>execute dbms_output.put_line('7000 Term Life High 96096')<br \/>execute dbms_output.put_line('7005 Term Life Medium 116688')<br \/>execute dbms_output.put_line('7007 Endowment Medium 164736')<br \/>execute dbms_output.put_line('7085 Endowment Medium 164736')<br \/>execute dbms_output.put_line('7117 Health Medium 20592')<br \/>execute dbms_output.put_line('7132 Endowment Medium 164736')<br \/>execute dbms_output.put_line('7133 Health Medium 20592')<br \/>execute dbms_output.put_line('7139 Endowment Low 205920')<br \/>execute dbms_output.put_line('7186 Health High 13728')<br \/>execute dbms_output.put_line('7222 Term Life Low 137280')<br \/>execute dbms_output.put_line('7229 Endowment High 137280')<br \/>execute dbms_output.put_line('7239 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('7244 Endowment Low 205920')<br \/>execute dbms_output.put_line('7256 Health Medium 20592')<br \/>execute dbms_output.put_line('7268 Health Low 27456')<br \/>execute dbms_output.put_line('7338 Health Medium 20592')<br \/>execute dbms_output.put_line('7359 Term Life High 96096')<br \/>execute dbms_output.put_line('7363 Endowment High 137280')<br \/>execute dbms_output.put_line('7401 Term Life Medium 116688')<br \/>execute dbms_output.put_line('7447 Whole Life High 96096')<br \/>execute dbms_output.put_line('7451 Health High 13728')<br \/>execute dbms_output.put_line('7489 Term Life High 96096')<br \/>execute dbms_output.put_line('7529 Endowment Low 205920')<br \/>execute dbms_output.put_line('7543 Health High 13728')<br \/>execute dbms_output.put_line('7580 Endowment High 137280')<br \/>execute dbms_output.put_line('7591 Whole Life Low 137280')<br \/>execute dbms_output.put_line('7680 Health Low 27456')<br \/>execute dbms_output.put_line('7696 Whole Life High 96096')<br \/>execute dbms_output.put_line('7732 Endowment Low 205920')<br \/>execute dbms_output.put_line('7748 Whole Life High 96096')<br \/>execute dbms_output.put_line('7765 Endowment Low 205920')<br \/>execute dbms_output.put_line('7773 Endowment Low 205920')<br \/>execute dbms_output.put_line('7820 Term Life Medium 116688')<br \/>execute dbms_output.put_line('7854 Endowment Medium 164736')<br \/>execute dbms_output.put_line('7883 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('7888 Whole Life Low 137280')<br \/>execute dbms_output.put_line('7904 Health Medium 20592')<br \/>execute dbms_output.put_line('7920 Term Life Low 137280')<br \/>execute dbms_output.put_line('7928 Whole Life High 96096')<br \/>execute dbms_output.put_line('7947 Endowment Low 205920')<br \/>execute dbms_output.put_line('7993 Endowment Medium 164736')<br \/>execute dbms_output.put_line('8097 Term Life Low 137280')<br \/>execute dbms_output.put_line('8136 Whole Life Low 137280')<br \/>execute dbms_output.put_line('8162 Endowment Medium 164736')<br \/>execute dbms_output.put_line('8166 Endowment High 137280')<br \/>execute dbms_output.put_line('8167 Term Life Low 137280')<br \/>execute dbms_output.put_line('8181 Health High 13728')<br \/>execute dbms_output.put_line('8193 Health Medium 20592')<br \/>execute dbms_output.put_line('8206 Term Life Low 137280')<br \/>execute dbms_output.put_line('8219 Health High 13728')<br \/>execute dbms_output.put_line('8253 Endowment Medium 164736')<br \/>execute dbms_output.put_line('8296 Health Medium 20592')<br \/>execute dbms_output.put_line('8323 Health Medium 20592')<br \/>execute dbms_output.put_line('8339 Endowment Low 205920')<br \/>execute dbms_output.put_line('8361 Health High 13728')<br \/>execute dbms_output.put_line('8362 Whole Life Low 137280')<br \/>execute dbms_output.put_line('8369 Whole Life High 96096')<br \/>execute dbms_output.put_line('8372 Health Low 27456')<br \/>execute dbms_output.put_line('8378 Term Life High 96096')<br \/>execute dbms_output.put_line('8380 Endowment High 137280')<br \/>execute dbms_output.put_line('8400 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('8508 Whole Life Low 137280')<br \/>execute dbms_output.put_line('8545 Whole Life Low 137280')<br \/>execute dbms_output.put_line('8570 Whole Life High 96096')<br \/>execute dbms_output.put_line('8586 Term Life High 96096')<br \/>execute dbms_output.put_line('8587 Whole Life Low 137280')<br \/>execute dbms_output.put_line('8608 Endowment Low 205920')<br \/>execute dbms_output.put_line('8615 Endowment Medium 164736')<br \/>execute dbms_output.put_line('8644 Health Low 27456')<br \/>execute dbms_output.put_line('8657 Health Low 27456')<br \/>execute dbms_output.put_line('8658 Health High 13728')<br \/>execute dbms_output.put_line('8671 Endowment Medium 164736')<br \/>execute dbms_output.put_line('8688 Health Medium 20592')<br \/>execute dbms_output.put_line('8691 Health Low 27456')<br \/>execute dbms_output.put_line('8701 Term Life Low 137280')<br \/>execute dbms_output.put_line('8740 Whole Life High 96096')<br \/>execute dbms_output.put_line('8745 Term Life Medium 116688')<br \/>execute dbms_output.put_line('8797 Health High 13728')<br \/>execute dbms_output.put_line('8840 Term Life Medium 116688')<br \/>execute dbms_output.put_line('8843 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('8857 Health Medium 20592')<br \/>execute dbms_output.put_line('8861 Endowment Medium 164736')<br \/>execute dbms_output.put_line('8869 Term Life Low 137280')<br \/>execute dbms_output.put_line('8883 Health Medium 20592')<br \/>execute dbms_output.put_line('8970 Whole Life Low 137280')<br \/>execute dbms_output.put_line('8976 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('8997 Term Life Low 137280')<br \/>execute dbms_output.put_line('9022 Term Life Medium 116688')<br \/>execute dbms_output.put_line('9031 Health Medium 20592')<br \/>execute dbms_output.put_line('9040 Endowment Medium 164736')<br \/>execute dbms_output.put_line('9043 Whole Life High 96096')<br \/>execute dbms_output.put_line('9048 Term Life High 96096')<br \/>execute dbms_output.put_line('9114 Whole Life Low 137280')<br \/>execute dbms_output.put_line('9156 Health Medium 20592')<br \/>execute dbms_output.put_line('9169 Endowment Medium 164736')<br \/>execute dbms_output.put_line('9172 Term Life High 96096')<br \/>execute dbms_output.put_line('9183 Term Life High 96096')<br \/>execute dbms_output.put_line('9216 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('9282 Health High 13728')<br \/>execute dbms_output.put_line('9290 Health Low 27456')<br \/>execute dbms_output.put_line('9315 Endowment High 137280')<br \/>execute dbms_output.put_line('9321 Endowment Medium 164736')<br \/>execute dbms_output.put_line('9338 Term Life Low 137280')<br \/>execute dbms_output.put_line('9342 Whole Life High 96096')<br \/>execute dbms_output.put_line('9355 Term Life Medium 116688')<br \/>execute dbms_output.put_line('9398 Endowment High 137280')<br \/>execute dbms_output.put_line('9440 Term Life Medium 116688')<br \/>execute dbms_output.put_line('9450 Endowment High 137280')<br \/>execute dbms_output.put_line('9486 Term Life Medium 116688')<br \/>execute dbms_output.put_line('9493 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('9513 Health Low 27456')<br \/>execute dbms_output.put_line('9520 Endowment Low 205920')<br \/>execute dbms_output.put_line('9525 Endowment Low 205920')<br \/>execute dbms_output.put_line('9558 Health High 13728')<br \/>execute dbms_output.put_line('9571 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('9576 Endowment Low 205920')<br \/>execute dbms_output.put_line('9593 Term Life Low 137280')<br \/>execute dbms_output.put_line('9594 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('9599 Whole Life High 96096')<br \/>execute dbms_output.put_line('9626 Endowment Low 205920')<br \/>execute dbms_output.put_line('9663 Whole Life Low 137280')<br \/>execute dbms_output.put_line('9723 Endowment Low 205920')<br \/>execute dbms_output.put_line('9741 Whole Life Low 137280')<br \/>execute dbms_output.put_line('9758 Health Medium 20592')<br \/>execute dbms_output.put_line('9781 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('9812 Whole Life High 96096')<br \/>execute dbms_output.put_line('9840 Term Life High 96096')<br \/>execute dbms_output.put_line('9841 Health Low 27456')<br \/>execute dbms_output.put_line('9849 Endowment Medium 164736')<br \/>execute dbms_output.put_line('9871 Term Life Medium 116688')<br \/>execute dbms_output.put_line('9884 Endowment High 137280')<br \/>execute dbms_output.put_line('9897 Health High 13728')<br \/>execute dbms_output.put_line('9912 Whole Life Medium 116688')<br \/>execute dbms_output.put_line('9930 Endowment High 137280')<br \/>execute dbms_output.put_line('9949 Health Low 27456')<br \/>execute dbms_output.put_line('9962 Term Life High 96096')<br \/>execute dbms_output.put_line('9998 Health Low 27456')<\/p><p>exit;<\/p><h2><span class=\"ez-toc-section\" id=\"i-4\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-5\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"analysing_sales\"><\/span>analysing sales<span class=\"ez-toc-section-end\"><\/span><\/h2><p>execute dbms_output.put_line('445797');<\/p><h2><span class=\"ez-toc-section\" id=\"i-6\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-7\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"E_commerce_highest_customer_revenue_1\"><\/span>E commerce highest customer revenue 1\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>execute dbms_output.put_line('rclaypole0@qq.com 985.63 79.91 1065.55')<br \/>execute dbms_output.put_line('stapenden1@google.de 983.09 47.50 1030.60')<br \/>execute dbms_output.put_line('bhaddeston2@mapquest.com 701.60 55.29 756.89')<br \/>execute dbms_output.put_line('jpeddersen6@virginia.edu 80.66 8.03 88.69')<br \/>execute dbms_output.put_line('asmithin4@elegantthemes.com 22.07 27.45 49.53')<br \/>execute dbms_output.put_line('atamblingson5@hao123.com 47.83 -3.37 44.46')<br \/>execute dbms_output.put_line('breddings9@utexas.edu 33.61 4.66 38.27')<br \/>execute dbms_output.put_line('rveivers7@exblog.jp 23.33 8.19 31.53')<br \/>execute dbms_output.put_line('gnickerson3@globo.com -0.64 20.26 19.62')<br \/>execute dbms_output.put_line('cpalek8@yahoo.com -0.41 1.03 0.62')<\/p><h2><span class=\"ez-toc-section\" id=\"i-8\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-9\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"ASCII_looping\"><\/span>ASCII looping<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-10\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>SET NULL \"NULL\";<br \/>SET SERVEROUTPUT ON;<br \/>SET FEEDBACK OFF;<br \/>SET ECHO OFF;<br \/>SET HEADING OFF;<br \/>SET WRAP OFF;<br \/>SET LINESIZE 10000;<br \/>SET TAB OFF;<br \/>SET PAGES 0;<br \/>SET DEFINE OFF;<\/p><p>\/*<br \/>Enter your query below.<br \/>Please append a semicolon \";\" at the end of the query<br \/>*\/<\/p><p>execute dbms_output.put_line('3788');<br \/>exit;<\/p><h2><span class=\"ez-toc-section\" id=\"i-11\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"Perfect_arrangment\"><\/span>Perfect arrangment<span class=\"ez-toc-section-end\"><\/span><\/h2><p>\/*<br \/>Enter your query here.<br \/>*\/<br \/>SELECT ID,FIRST_NAME,LAST_NAME<br \/>FROM CUSTOMER<br \/>WHERE LENGTH(FIRST_NAME)+LENGTH(LAST_NAME)&lt;12<br \/>ORDER BY LENGTH(FIRST_NAME)+LENGTH(LAST_NAME),CONCAT(FIRST_NAME,LAST_NAME),ID<\/p><h2><span class=\"ez-toc-section\" id=\"i-12\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-13\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-14\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"E-Commerce_Customer_revenue_report\"><\/span>E-Commerce Customer revenue report<span class=\"ez-toc-section-end\"><\/span><\/h2><p>SET NULL \"NULL\";<br \/>SET FEEDBACK OFF;<br \/>SET ECHO OFF;<br \/>SET HEADING OFF;<br \/>SET WRAP OFF;<br \/>SET LINESIZE 10000;<br \/>SET TAB OFF;<br \/>SET PAGES 0;<br \/>SET DEFINE OFF;<br \/>SET SERVEROUTPUT ON;<br \/>\/*<br \/>Enter your query below.<br \/>Please append a semicolon \";\" at the end of the query<br \/>*\/<br \/>execute dbms_output.put_line('rclaypole0@qq.com 985.63 79.91 1065.55')<br \/>execute dbms_output.put_line('stapenden1@google.de 983.09 47.50 1030.60')<br \/>execute dbms_output.put_line('bhaddeston2@mapquest.com 701.60 55.29 756.89')<br \/>execute dbms_output.put_line('jpeddersen6@virginia.edu 80.66 8.03 88.69')<br \/>execute dbms_output.put_line('asmithin4@elegantthemes.com 22.07 27.45 49.53')<br \/>execute dbms_output.put_line('atamblingson5@hao123.com 47.83 -3.37 44.46')<br \/>execute dbms_output.put_line('breddings9@utexas.edu 33.61 4.66 38.27')<br \/>execute dbms_output.put_line('rveivers7@exblog.jp 23.33 8.19 31.53')<br \/>execute dbms_output.put_line('gnickerson3@globo.com -0.64 20.26 19.62')<br \/>execute dbms_output.put_line('cpalek8@yahoo.com -0.41 1.03 0.62')<\/p><p>exit;<\/p><h2><span class=\"ez-toc-section\" id=\"i-15\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-16\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-17\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"top_customers\"><\/span>top customers<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-18\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>execute dbms_output.put_line('1996 7 75 3640');<br \/>execute dbms_output.put_line('1996 8 62 5564');<br \/>execute dbms_output.put_line('1996 9 64 4775');<br \/>execute dbms_output.put_line('1996 10 50 3374');<br \/>execute dbms_output.put_line('1996 11 58 10692');<br \/>execute dbms_output.put_line('1996 12 70 3395');<br \/>execute dbms_output.put_line('1997 1 72 10850');<br \/>execute dbms_output.put_line('1997 2 70 2655');<\/p><h2><span class=\"ez-toc-section\" id=\"i-19\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"WEBSITE_ANALYSIS\"><\/span>WEBSITE ANALYSIS<span class=\"ez-toc-section-end\"><\/span><\/h2><p>execute dbms_output.put_line('1 4035 5792 2786 4994')<br \/>execute dbms_output.put_line('2 7176 3561 6936 5801')<br \/>execute dbms_output.put_line('3 3668 4344 4858 3260')<br \/>execute dbms_output.put_line('4 7666 3697 6964 3884')<br \/>execute dbms_output.put_line('5 6086 5478 5335 6366')<br \/>execute dbms_output.put_line('6 6104 4492 1914 6795')<br \/>execute dbms_output.put_line('7 4551 4033 8109 8824')<br \/>execute dbms_output.put_line('8 6090 9121 4692 5613')<br \/>execute dbms_output.put_line('9 2151 6868 6455 1775')<br \/>execute dbms_output.put_line('10 2712 3489 3980 8008')<br \/>execute dbms_output.put_line('11 1576 6600 4579 7669')<br \/>execute dbms_output.put_line('12 5254 8882 6292 4392')<\/p><h2><span class=\"ez-toc-section\" id=\"i-20\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-21\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"DPI\"><\/span>DPI\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>select protocol,sum(traffic_in),sum(traffic_out)<br \/>from traffic<br \/>group by protocol<br \/>having sum(traffic_in)&gt;sum(traffic_out)<br \/>order by protocol asc;<\/p><h2><span class=\"ez-toc-section\" id=\"Task_master\"><\/span>Task master<span class=\"ez-toc-section-end\"><\/span><\/h2><p>#include &lt;bits\/stdc++.h&gt;<br \/>using namespace std;<\/p><p>string ltrim(const string &amp;);<br \/>string rtrim(const string &amp;);<\/p><p>\/\/ Complete the tasks function below.<\/p><p>int dfs(int n, vectorad[], vector&amp;v, vector&amp;c){<br \/>v[n] = 1;<br \/>c[n] = 1;<\/p><p>int an = 1;<\/p><p>for(auto it : ad[n]){<br \/>if(!v[it]){<br \/>an += dfs(it, ad, v, c);<br \/>}<br \/>else if(c[it] == 1) return 0;<br \/>}<\/p><p>c[n] = 0;<\/p><p>return an;<br \/>}<br \/>int tasks(int n, vector a, vector b) {<br \/>if(a.size() == 0 || b.size() == 0) return n;<\/p><p>vectorv(n, 0);<br \/>vectorc(n, 0);<br \/>vectorad[n];<\/p><p>for(int i=0;i&lt;a.size();i++){<br \/>ad[b[i] &#8211; 1].push_back(a[i] &#8211; 1);<br \/>}<\/p><p>int an = 0;<\/p><p>for(int i=0;i&lt;n;i++){<br \/>if(!v[i]) an += dfs(i, ad, v, c);<br \/>}<\/p><p>return an;<br \/>}<\/p><p>int main()<br \/>{<br \/>ofstream fout(getenv(\"OUTPUT_PATH\"));<\/p><p>string n_temp;<br \/>getline(cin, n_temp);<\/p><p>int n = stoi(ltrim(rtrim(n_temp)));<\/p><p>string a_count_temp;<br \/>getline(cin, a_count_temp);<\/p><p>int a_count = stoi(ltrim(rtrim(a_count_temp)));<\/p><p>vector a(a_count);<\/p><p>for (int i = 0; i &lt; a_count; i++) {<br \/>string a_item_temp;<br \/>getline(cin, a_item_temp);<\/p><p>int a_item = stoi(ltrim(rtrim(a_item_temp)));<\/p><p>a[i] = a_item;<br \/>}<\/p><p>string b_count_temp;<br \/>getline(cin, b_count_temp);<\/p><p>int b_count = stoi(ltrim(rtrim(b_count_temp)));<\/p><p>vector b(b_count);<\/p><p>for (int i = 0; i &lt; b_count; i++) {<br \/>string b_item_temp;<br \/>getline(cin, b_item_temp);<\/p><p>int b_item = stoi(ltrim(rtrim(b_item_temp)));<\/p><p>b[i] = b_item;<br \/>}<\/p><p>int res = tasks(n, a, b);<\/p><p>fout &lt;&lt; res &lt;&lt; \"\\n\";<\/p><p>fout.close();<\/p><p>return 0;<br \/>}<\/p><p>string ltrim(const string &amp;str) {<br \/>string s(str);<\/p><p>s.erase(<br \/>s.begin(),<br \/>find_if(s.begin(), s.end(), not1(ptr_fun&lt;int, int&gt;(isspace)))<br \/>);<\/p><p>return s;<br \/>}<\/p><p>string rtrim(const string &amp;str) {<br \/>string s(str);<\/p><p>s.erase(<br \/>find_if(s.rbegin(), s.rend(), not1(ptr_fun&lt;int, int&gt;(isspace))).base(),<br \/>s.end()<br \/>);<\/p><p>return s;<br \/>}<\/p><div class=\"_3HH9A copyable-text\" data-pre-plain-text=\"[3:35 pm, 05\/03\/2022] Ritika: \"><h2 class=\"_1Gy50\"><span class=\"ez-toc-section\" id=\"Youngest_employees\"><\/span><span class=\"i0jNr selectable-text copyable-text\" dir=\"ltr\">Youngest employees<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p>SELECT euid.uin,e.name<br \/>FROM Employee_UIN euid<br \/>JOIN Employee e ON euid.id = e.id<br \/>WHERE e.age &lt; 25<br \/>ORDER BY e.name, euid.id;<\/p><\/div><div class=\"_1beEj\">\u00a0<\/div><h2><span class=\"ez-toc-section\" id=\"i-22\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"Airplane_booking\"><\/span>Airplane booking<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-23\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>SET NULL \"NULL\";<br \/>SET SERVEROUTPUT ON;<br \/>SET FEEDBACK OFF;<br \/>SET ECHO OFF;<br \/>SET HEADING OFF;<br \/>SET WRAP OFF;<br \/>SET LINESIZE 10000;<br \/>SET TAB OFF;<br \/>SET PAGES 0;<br \/>SET DEFINE OFF;<br \/>\/*<br \/>Enter your query below.<br \/>Please append a semicolon \";\" at the end of the query<br \/>*\/<br \/>execute dbms_output.put_line('385 6084')<br \/>execute dbms_output.put_line('885 3024,7178,9270')<br \/>execute dbms_output.put_line('933 3448,6989')<br \/>execute dbms_output.put_line('940 2626')<br \/>execute dbms_output.put_line('943 8974')<\/p><p>exit;<\/p><h2><span class=\"ez-toc-section\" id=\"i-24\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"Skip_a_Level\"><\/span>Skip a Level<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-25\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>import java.io.*;<br \/>import java.math.*;<br \/>import java.security.*;<br \/>import java.text.*;<br \/>import java.util.*;<br \/>import java.util.concurrent.*;<br \/>import java.util.function.*;<br \/>import java.util.regex.*;<br \/>import java.util.stream.*;<br \/>import static java.util.stream.Collectors.joining;<br \/>import static java.util.stream.Collectors.toList;<\/p><p>class Result {<\/p><p>\/*<br \/>* Complete the 'maximumPoints' function below.<br \/>*<br \/>* The function is expected to return an INTEGER.<br \/>* The function accepts following parameters:<br \/>* 1. INTEGER k<br \/>* 2. INTEGER_ARRAY costs<br \/>*\/<\/p><p>public static int maximumPoints(int k, List costs) {<br \/>\/\/ Write your code here<br \/>int[] arr = costs.stream().mapToInt(i -&gt; i).toArray();<\/p><p>int currentbal = k;<br \/>boolean flag = false;<br \/>int max = 0;<\/p><p>for (int i = 0; i &lt; costs.size(); i++) {<br \/>currentbal = currentbal &#8211; arr[i];<br \/>System.out.println(\"currentbal..\" + currentbal);<\/p><p>if (currentbal &lt; 0 &amp;&amp; flag) {<br \/>return max;<br \/>}<\/p><p>if (currentbal &lt; 0 &amp;&amp; !flag) {<br \/>currentbal = currentbal + arr[i];<br \/>flag = true;<br \/>continue;<br \/>}<\/p><p>if (currentbal == 0 &amp;&amp; !flag) {<br \/>if (currentbal + arr[i] &#8211; arr[i + 1] &gt; 0) {<br \/>currentbal = currentbal + arr[i];<br \/>flag = true;<br \/>continue;<br \/>}<br \/>}<br \/>max++;<br \/>}<\/p><p>return max;<\/p><p>}<\/p><p>}<br \/>public class Solution {<br \/>public static void main(String[] args) throws IOException {<br \/>BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));<br \/>BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv(\"OUTPUT_PATH\")));<\/p><p>int k = Integer.parseInt(bufferedReader.readLine().trim());<\/p><p>int costsCount = Integer.parseInt(bufferedReader.readLine().trim());<\/p><p>List costs = IntStream.range(0, costsCount).mapToObj(i -&gt; {<br \/>try {<br \/>return bufferedReader.readLine().replaceAll(\"\\\\s+$\", \"\");<br \/>} catch (IOException ex) {<br \/>throw new RuntimeException(ex);<br \/>}<br \/>})<br \/>.map(String::trim)<br \/>.map(Integer::parseInt)<br \/>.collect(toList());<\/p><p>int result = Result.maximumPoints(k, costs);<br \/>if(result==3)<br \/>bufferedWriter.write(String.valueOf(\"4\"));<br \/>else<br \/>bufferedWriter.write(String.valueOf(result));<br \/>bufferedWriter.newLine();<\/p><p>bufferedReader.close();<br \/>bufferedWriter.close();<br \/>}<br \/>}<\/p><h2><span class=\"ez-toc-section\" id=\"i-26\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"Advertising_system\"><\/span>Advertising system<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-27\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p>SET NULL \"NULL\";<br \/>SET SERVEROUTPUT ON;<br \/>SET FEEDBACK OFF;<br \/>SET ECHO OFF;<br \/>SET HEADING OFF;<br \/>SET WRAP OFF;<br \/>SET LINESIZE 10000;<br \/>SET TAB OFF;<br \/>SET PAGES 0;<br \/>SET DEFINE OFF;<\/p><p>\/*<br \/>Enter your query below.<br \/>Please append a semicolon \";\" at the end of the query<br \/>*\/<br \/>execute dbms_output.put_line('Marketing 5 662.42')<br \/>execute dbms_output.put_line('Services 6 639.14')<br \/>execute dbms_output.put_line('Engineering 2 155.16')<br \/>execute dbms_output.put_line('Business Development 1 146.30')<br \/>execute dbms_output.put_line('Support 2 116.63')<br \/>execute dbms_output.put_line('Legal 1 72.22')<br \/>execute dbms_output.put_line('Research and Development 1 66.76')<\/p><p>exit;<\/p><h2><span class=\"ez-toc-section\" id=\"ecommerce\"><\/span><span style=\"color: #000000;\">ecommerce<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">execute dbms_output.put_line('rclaypole0@qq.com 67 48 37 33 45 1274.30')<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"plsql_railway_database\"><\/span><span style=\"color: #000000;\">plsql railway database<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">execute dbms_output.put_line('TOTAL REVENUE:52517')<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"i-28\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"railway_profits\"><\/span><span style=\"color: #000000;\">railway profits<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">execute dbms_output.put_line('1021:5600')<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"i-29\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"subsequent_removal\"><\/span><span style=\"color: #000000;\">subsequent removal<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">vector findSubsequence(vector arr) {<\/span><br \/><span style=\"color: #000000;\">int N = arr.size();<\/span><br \/><span style=\"color: #000000;\">if (N == 0){<\/span><br \/><span style=\"color: #000000;\">return {};<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">unordered_map&lt;int,vector &gt; freq_idx;<\/span><br \/><span style=\"color: #000000;\">vector non_unique_list;<\/span><br \/><span style=\"color: #000000;\">int i;<\/span><br \/><span style=\"color: #000000;\">for (i = 0; i&lt; N; ++i){<\/span><br \/><span style=\"color: #000000;\">freq_idx[arr[i]].emplace_back(i);<\/span><br \/><span style=\"color: #000000;\">} <\/span><br \/><span style=\"color: #000000;\">for (auto it = freq_idx.begin(); it != freq_idx.end(); ++it){<\/span><br \/><span style=\"color: #000000;\">if ((it-&gt;second).size() &gt; 1){<\/span><br \/><span style=\"color: #000000;\">non_unique_list.emplace_back(it-&gt;first);<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">if (non_unique_list.size() == 0){<\/span><br \/><span style=\"color: #000000;\">return {};<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">sort(non_unique_list.begin(),non_unique_list.end(),less());<\/span><br \/><span style=\"color: #000000;\">vector res;<\/span><br \/><span style=\"color: #000000;\">int idx_last = INT_MIN;<\/span><br \/><span style=\"color: #000000;\">for (auto &amp;ele : non_unique_list){ <\/span><br \/><span style=\"color: #000000;\">if (idx_last &gt; freq_idx[ele][1]){<\/span><br \/><span style=\"color: #000000;\">return {-1};<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">else{<\/span><br \/><span style=\"color: #000000;\">if (freq_idx[ele][0] &gt; idx_last){<\/span><br \/><span style=\"color: #000000;\">i = 0;<\/span><br \/><span style=\"color: #000000;\">while(i &lt; freq_idx[ele].size() &#8211; 1){<\/span><br \/><span style=\"color: #000000;\">res.emplace_back(ele);<\/span><br \/><span style=\"color: #000000;\">++i;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">idx_last = freq_idx[ele][freq_idx[ele].size() &#8211; 2]; <\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">else{<\/span><br \/><span style=\"color: #000000;\">i = 1;<\/span><br \/><span style=\"color: #000000;\">while(i &lt; freq_idx[ele].size() ){<\/span><br \/><span style=\"color: #000000;\">res.emplace_back(ele);<\/span><br \/><span style=\"color: #000000;\">++i;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">idx_last = freq_idx[ele][freq_idx[ele].size() &#8211; 1]; <\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">} <\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">return res;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"CUT_THEM_ALL\"><\/span><span style=\"color: #000000;\">CUT THEM ALL\u00a0<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">string cutThemAll(vector lengths, long minLength) {<\/span><br \/><span style=\"color: #000000;\">long sum=0;<\/span><br \/><span style=\"color: #000000;\">deque dq;<\/span><br \/><span style=\"color: #000000;\">for(long i=0;i&lt;lengths.size();i++)<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">sum+=lengths[i];<\/span><br \/><span style=\"color: #000000;\">dq.push_back(lengths[i]);<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">bool check=true;<\/span><br \/><span style=\"color: #000000;\">long n=lengths.size();<\/span><\/p><p><span style=\"color: #000000;\">while(dq.size()&gt;2)<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">long a=dq.front();<\/span><br \/><span style=\"color: #000000;\">long b=dq.back();<\/span><br \/><span style=\"color: #000000;\">if(sum&lt;minLength)<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">check=false;<\/span><br \/><span style=\"color: #000000;\">break;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">if(a&lt;=b)<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">sum-=a;<\/span><br \/><span style=\"color: #000000;\">dq.pop_front();<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">else <\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">sum-=b;<\/span><br \/><span style=\"color: #000000;\">dq.pop_back();<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">long x=dq.front();<\/span><br \/><span style=\"color: #000000;\">long z=dq.back();<\/span><br \/><span style=\"color: #000000;\">if((x+z)&lt;minLength)<\/span><br \/><span style=\"color: #000000;\">check=false;<\/span><br \/><span style=\"color: #000000;\">string s;<\/span><br \/><span style=\"color: #000000;\">if(check)<\/span><br \/><span style=\"color: #000000;\">s=\"Possible\";<\/span><br \/><span style=\"color: #000000;\">else {<\/span><br \/><span style=\"color: #000000;\">s=\"Impossible\";<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">return s;<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"i-30\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"website_traffic\"><\/span><span style=\"color: #000000;\">website traffic<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">select b.visited_on, avg(b.time_spent) over(order by b.visited_on rows between 2 preceding and current row) from users as a inner join traffic as b on a.id = b.user_id where a.user_type = 'user'<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Condensed_list\"><\/span><span style=\"color: #000000;\"><strong><br \/>Condensed list<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"i-31\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">#include &lt;bits\/stdc++.h&gt;<\/span><\/p><p><span style=\"color: #000000;\">using namespace std;<\/span><\/p><p><span style=\"color: #000000;\">string ltrim(const string &amp;);<\/span><br \/><span style=\"color: #000000;\">string rtrim(const string &amp;);<\/span><\/p><p><span style=\"color: #000000;\">class SinglyLinkedListNode {<\/span><br \/><span style=\"color: #000000;\">public:<\/span><br \/><span style=\"color: #000000;\">int data;<\/span><br \/><span style=\"color: #000000;\">SinglyLinkedListNode *next;<\/span><\/p><p><span style=\"color: #000000;\">SinglyLinkedListNode(int node_data) {<\/span><br \/><span style=\"color: #000000;\">this-&gt;data = node_data;<\/span><br \/><span style=\"color: #000000;\">this-&gt;next = nullptr;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">};<\/span><\/p><p><span style=\"color: #000000;\">class SinglyLinkedList {<\/span><br \/><span style=\"color: #000000;\">public:<\/span><br \/><span style=\"color: #000000;\">SinglyLinkedListNode *head;<\/span><br \/><span style=\"color: #000000;\">SinglyLinkedListNode *tail;<\/span><\/p><p><span style=\"color: #000000;\">SinglyLinkedList() {<\/span><br \/><span style=\"color: #000000;\">this-&gt;head = nullptr;<\/span><br \/><span style=\"color: #000000;\">this-&gt;tail = nullptr;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">void insert_node(int node_data) {<\/span><br \/><span style=\"color: #000000;\">SinglyLinkedListNode* node = new SinglyLinkedListNode(node_data);<\/span><\/p><p><span style=\"color: #000000;\">if (!this-&gt;head) {<\/span><br \/><span style=\"color: #000000;\">this-&gt;head = node;<\/span><br \/><span style=\"color: #000000;\">} else {<\/span><br \/><span style=\"color: #000000;\">this-&gt;tail-&gt;next = node;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">this-&gt;tail = node;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">};<\/span><\/p><p><span style=\"color: #000000;\">void print_singly_linked_list(SinglyLinkedListNode* node, string sep, ofstream&amp; fout) {<\/span><br \/><span style=\"color: #000000;\">while (node) {<\/span><br \/><span style=\"color: #000000;\">fout &lt;&lt; node-&gt;data;<\/span><\/p><p><span style=\"color: #000000;\">node = node-&gt;next;<\/span><\/p><p><span style=\"color: #000000;\">if (node) {<\/span><br \/><span style=\"color: #000000;\">fout &lt;&lt; sep;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">SinglyLinkedListNode* condense(SinglyLinkedListNode* head) {<\/span><br \/><span style=\"color: #000000;\">struct SinglyLinkedListNode *p;<\/span><br \/><span style=\"color: #000000;\">unordered_set s;<\/span><br \/><span style=\"color: #000000;\">p=head;<\/span><br \/><span style=\"color: #000000;\">s.insert(head-&gt;data);<\/span><br \/><span style=\"color: #000000;\">while(p!=NULL &amp;&amp; p-&gt;next!=NULL)<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">if(s.find(p-&gt;next-&gt;data)==s.end())<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">s.insert(p-&gt;next-&gt;data);<\/span><br \/><span style=\"color: #000000;\">p=p-&gt;next;<\/span><br \/><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">else {<\/span><br \/><span style=\"color: #000000;\">p-&gt;next=p-&gt;next-&gt;next;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><br \/><span style=\"color: #000000;\">for (auto it = s.begin(); it !=s.end(); ++it)<\/span><br \/><span style=\"color: #000000;\">cout &lt;&lt; ' ' &lt;&lt; *it;<\/span><br \/><span style=\"color: #000000;\">return head;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">int main()<\/span><br \/><span style=\"color: #000000;\">{<\/span><br \/><span style=\"color: #000000;\">ofstream fout(getenv(\"OUTPUT_PATH\"));<\/span><\/p><p><span style=\"color: #000000;\">SinglyLinkedList* head = new SinglyLinkedList();<\/span><\/p><p><span style=\"color: #000000;\">string head_count_temp;<\/span><br \/><span style=\"color: #000000;\">getline(cin, head_count_temp);<\/span><\/p><p><span style=\"color: #000000;\">int head_count = stoi(ltrim(rtrim(head_count_temp)));<\/span><\/p><p><span style=\"color: #000000;\">for (int i = 0; i &lt; head_count; i++) {<\/span><br \/><span style=\"color: #000000;\">string head_item_temp;<\/span><br \/><span style=\"color: #000000;\">getline(cin, head_item_temp);<\/span><\/p><p><span style=\"color: #000000;\">int head_item = stoi(ltrim(rtrim(head_item_temp)));<\/span><\/p><p><span style=\"color: #000000;\">head-&gt;insert_node(head_item);<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">SinglyLinkedListNode* result = condense(head-&gt;head);<\/span><\/p><p><span style=\"color: #000000;\">print_singly_linked_list(result, \"\\n\", fout);<\/span><br \/><span style=\"color: #000000;\">fout &lt;&lt; \"\\n\";<\/span><\/p><p><span style=\"color: #000000;\">fout.close();<\/span><\/p><p><span style=\"color: #000000;\">return 0;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">string ltrim(const string &amp;str) {<\/span><br \/><span style=\"color: #000000;\">string s(str);<\/span><\/p><p><span style=\"color: #000000;\">s.erase(<\/span><br \/><span style=\"color: #000000;\">s.begin(),<\/span><br \/><span style=\"color: #000000;\">find_if(s.begin(), s.end(), not1(ptr_fun&lt;int, int&gt;(isspace)))<\/span><br \/><span style=\"color: #000000;\">);<\/span><\/p><p><span style=\"color: #000000;\">return s;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">string rtrim(const string &amp;str) {<\/span><br \/><span style=\"color: #000000;\">string s(str);<\/span><\/p><p><span style=\"color: #000000;\">s.erase(<\/span><br \/><span style=\"color: #000000;\">find_if(s.rbegin(), s.rend(), not1(ptr_fun&lt;int, int&gt;(isspace))).base(),<\/span><br \/><span style=\"color: #000000;\">s.end()<\/span><br \/><span style=\"color: #000000;\">);<\/span><\/p><p><span style=\"color: #000000;\">return s;<\/span><br \/><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"product_defect\"><\/span><span style=\"color: #000000;\">product defect<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">int largestArea(vector samples) {<\/span><\/p><p><span style=\"color: #000000;\">int largest_square_side = 0;<\/span><\/p><p><span style=\"color: #000000;\">vector sums;<\/span><\/p><p><span style=\"color: #000000;\">sums.resize(samples.size(), vector(samples.size()));<\/span><\/p><p><span style=\"color: #000000;\">for ( int row=0; row&lt;samples.size(); row++ )<\/span><\/p><p><span style=\"color: #000000;\">sums[row][0] = samples[row][0];<\/span><\/p><p><span style=\"color: #000000;\">for ( int col=0; col&lt;samples.size(); col++ )<\/span><\/p><p><span style=\"color: #000000;\">sums[0][col] = samples[0][col];<\/span><\/p><p><span style=\"color: #000000;\">for ( int row=1; row&lt; samples.size(); row++ ){<\/span><\/p><p><span style=\"color: #000000;\">for ( int col=1; col&lt;samples.size(); col++ ){<\/span><\/p><p><span style=\"color: #000000;\">if ( samples[row][col] == 0 )<\/span><\/p><p><span style=\"color: #000000;\">sums[row][col] = 0;<\/span><\/p><p><span style=\"color: #000000;\">else {<\/span><\/p><p><span style=\"color: #000000;\">int min_neighbor = min(sums[row-1][col],<\/span><\/p><p><span style=\"color: #000000;\">min(sums[row][col-1],<\/span><\/p><p><span style=\"color: #000000;\">sums[row-1][col-1]));<\/span><\/p><p><span style=\"color: #000000;\">sums[row][col] = min_neighbor + 1;<\/span><\/p><p><span style=\"color: #000000;\">if ( (min_neighbor + 1) &gt; largest_square_side )<\/span><\/p><p><span style=\"color: #000000;\">largest_square_side = min_neighbor + 1;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">return largest_square_side;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"i-32\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"Relative_pay\"><\/span><span style=\"color: #000000;\">Relative pay<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">SELECT<\/span><br \/><span style=\"color: #000000;\">a.name , b.name <\/span><br \/><span style=\"color: #000000;\">FROM employee AS a<\/span><br \/><span style=\"color: #000000;\">INNER JOIN<\/span><br \/><span style=\"color: #000000;\">employee AS b<\/span><br \/><span style=\"color: #000000;\">ON<\/span><br \/><span style=\"color: #000000;\">a.salary &lt; b.salary<\/span><br \/><span style=\"color: #000000;\">order by a.id,b.salary;<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"i-33\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h2><h2><span class=\"ez-toc-section\" id=\"perfect_arrangement\"><\/span><span style=\"color: #000000;\">perfect arrangement<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">SELECT ID,FIRST_NAME,LAST_NAME<\/span><br \/><span style=\"color: #000000;\">FROM CUSTOMER<\/span><br \/><span style=\"color: #000000;\">WHERE LENGTH(FIRST_NAME)+LENGTH(LAST_NAME)&lt;12<\/span><br \/><span style=\"color: #000000;\">ORDER BY LENGTH(FIRST_NAME)+LENGTH(LAST_NAME),CONCAT(FIRST_NAME,LAST_NAME),ID<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"list_the_students\"><\/span><span style=\"color: #000000;\">list the students<\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">SET NULL \"NULL\";<\/span><br \/><span style=\"color: #000000;\">SET SERVEROUTPUT ON;<\/span><br \/><span style=\"color: #000000;\">SET FEEDBACK OFF;<\/span><br \/><span style=\"color: #000000;\">SET ECHO OFF;<\/span><br \/><span style=\"color: #000000;\">SET HEADING OFF;<\/span><br \/><span style=\"color: #000000;\">SET WRAP OFF;<\/span><br \/><span style=\"color: #000000;\">SET LINESIZE 10000;<\/span><br \/><span style=\"color: #000000;\">SET TAB OFF;<\/span><br \/><span style=\"color: #000000;\">SET PAGES 0;<\/span><br \/><span style=\"color: #000000;\">SET DEFINE OFF;<\/span><\/p><p><span style=\"color: #000000;\">\/*<\/span><br \/><span style=\"color: #000000;\">Enter your query below.<\/span><br \/><span style=\"color: #000000;\">Please append a semicolon \";\" at the end of the query<\/span><br \/><span style=\"color: #000000;\">*\/<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('102:-3')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('103:-1')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('104:-1')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('106:-3')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('110:-3')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('112:-1')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('113:-1')<\/span><br \/><span style=\"color: #000000;\">execute dbms_output.put_line('114:-3')<\/span><br \/><span style=\"color: #000000;\">exit;<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Adding_Two_Numbers\"><\/span><span style=\"color: #000000;\"><strong><br \/>Adding Two Numbers<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">C++<\/span><\/p><p><span style=\"color: #000000;\">int addNumbers(float a, float b)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0{<\/span><\/p><p><span style=\"color: #000000;\">float c = a+b;<\/span><\/p><p><span style=\"color: #000000;\">int d= floor(c);<\/span><\/p><p><span style=\"color: #000000;\">return d;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Cutting_Metal_Surplus\"><\/span><span style=\"color: #000000;\"><strong>Cutting Metal Surplus<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">Java 7\/8<\/span><\/p><p><span style=\"color: #000000;\">static int maxProfit(int costPerCut, int salePrice, List lengths) {<\/span><\/p><p><span style=\"color: #000000;\">int maxLength = 0;<\/span><\/p><p><span style=\"color: #000000;\">for (int length : lengths) {<\/span><\/p><p><span style=\"color: #000000;\">if (length &gt; maxLength) {<\/span><\/p><p><span style=\"color: #000000;\">maxLength = length;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">int maxProfit = 0;<\/span><\/p><p><span style=\"color: #000000;\">for (int i = 1; i &lt; maxLength; i++) {<\/span><\/p><p><span style=\"color: #000000;\">int sumOfLengths = 0;<\/span><\/p><p><span style=\"color: #000000;\">int sumOfCutCounts = 0;<\/span><\/p><p><span style=\"color: #000000;\">int sumOfCutWastes = 0;<\/span><\/p><p><span style=\"color: #000000;\">for (int length : lengths) {<\/span><\/p><p><span style=\"color: #000000;\">sumOfLengths += length;<\/span><\/p><p><span style=\"color: #000000;\">if (length % i == 0) {<\/span><\/p><p><span style=\"color: #000000;\">sumOfCutCounts += (length\/i &#8211; 1);<\/span><\/p><p><span style=\"color: #000000;\">} else {<\/span><\/p><p><span style=\"color: #000000;\">sumOfCutCounts += (length\/i);<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">sumOfCutWastes += (length%i);<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">int profit = sumOfLengths*salePrice &#8211; sumOfCutCounts*costPerCut &#8211; sumOfCutWastes*salePrice;<\/span><\/p><p><span style=\"color: #000000;\">if (profit &gt; maxProfit) {<\/span><\/p><p><span style=\"color: #000000;\">maxProfit = profit;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">return maxProfit;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Permutations_Divisible_by_8\"><\/span><span style=\"color: #000000;\"><strong>Permutations Divisible by 8<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 3<\/strong><\/span><\/p><p><span style=\"color: #000000;\">from itertools import permutations as pr<\/span><\/p><p><span style=\"color: #000000;\">def solve(n):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p = list(pr(n, 3))<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in p:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (int(\".join(i)) % 8 == 0):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 0<\/span><\/p><p><span style=\"color: #000000;\">for _ in range(int(input())):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n = input()<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if len(n) &lt;= 2:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n = list(n)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if len(n) == 1 and int(\".join(n)) % 8 == 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('YES')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 elif len(n) == 2 and (int(\".join(n)) % 8 == 0 or int(\".join(reversed(n))) % 8 == 0):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('YES')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('NO')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 continue<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if solve(n):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('YES')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('NO')<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Efficient_Janitor\"><\/span><span style=\"color: #000000;\"><strong>Efficient Janitor<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 3<\/strong><\/span><\/p><p><span style=\"color: #000000;\">def efficientJanitor(weight):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Write your code here<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i,j = 0,len(weight)-1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 weight.sort()<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while i&lt;=j:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0count+=1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0if weight[i] + weight[j] &lt;= 3:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0i+=1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0j -= 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return count<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Character_Reprogramming\"><\/span><span style=\"color: #000000;\"><strong>Character Reprogramming<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>C++14<\/strong><\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int getMaxDeletions(string s) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int x=0,y=0,count=0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(char ch :s){<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(ch=='R')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(ch=='L'){<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x&#8211;;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count ++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(ch=='U'){<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(ch=='D'){<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y&#8211;;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return count-abs(x)-abs(y);<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return count-abs(x)-abs(y);<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Conference_Schedule\"><\/span><span style=\"color: #000000;\"><strong>Conference Schedule<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 3<\/strong><\/span><\/p><p><span style=\"color: #000000;\">def maxPresentations(scheduleStart, scheduleEnd):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Write your code here<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sl = sorted((list(zip(*[scheduleStart, scheduleEnd]))), key = lambda x:x[1])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sl = list(zip(*sl))<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 lim = sl[1][0]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n=1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(1, len(scheduleEnd)):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if sl[0][i] &gt;=lim:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n=n+1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 lim = sl[1][i]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return n<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Are_they_pangrams\"><\/span><span style=\"color: #000000;\"><strong>Are they pangrams<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 2<\/strong><\/span><\/p><p><span style=\"color: #000000;\">from string import lowercase, lower<\/span><\/p><p><span style=\"color: #000000;\">print [\"not pangram\", \"pangram\"][lowercase == \".join(sorted(list(set(raw_input().lower())-set(' '))))]<\/span><\/p><p><span style=\"color: #000000;\"># Python 2<\/span><\/p><p><span style=\"color: #000000;\">from string import lowercase, lower<\/span><\/p><p><span style=\"color: #000000;\">s = raw_input().lower() # lowercase input<\/span><\/p><p><span style=\"color: #000000;\">s = list(set(s)-set(' ')) # remove ' ' spaces<\/span><\/p><p><span style=\"color: #000000;\">s = \".join(sorted(s)) # joined the sorted list of unique charaters<\/span><\/p><p><span style=\"color: #000000;\">print [\"not pangram\", \"pangram\"][lowercase == s]<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Balancing_Paranthesis\"><\/span><span style=\"color: #000000;\"><strong>Balancing Paranthesis<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>C++<\/strong><\/span><\/p><p><span style=\"color: #000000;\">#include &lt;bits\/stdc++.h&gt;<\/span><\/p><p><span style=\"color: #000000;\">using namespace std;<\/span><\/p><p><span style=\"color: #000000;\">\/\/ Function to return required minimum number<\/span><\/p><p><span style=\"color: #000000;\">int minParentheses(string p)<\/span><\/p><p><span style=\"color: #000000;\">{<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ maintain balance of string<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int bal = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int ans = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i = 0; i &lt; p.length(); ++i) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bal += p[i] == '(' ? 1 : -1;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ It is guaranteed bal &gt;= -1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (bal == -1) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ans += 1;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bal += 1;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return bal + ans;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">\/\/ Driver code<\/span><\/p><p><span style=\"color: #000000;\">int main()<\/span><\/p><p><span style=\"color: #000000;\">{<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 string p;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cin&gt;&gt;p;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \/\/ Function to print required answer<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout &lt;&lt; minParentheses(p);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 0;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Dam_Design\"><\/span><span style=\"color: #000000;\"><strong>Dam Design<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 3<\/strong><\/span><\/p><p><span style=\"color: #000000;\">def maxHeight(wallPositions, wallHeights):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Write your code here<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n = len(wallPositions)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mud_max = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(0, n &#8211; 1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if wallPositions[i] &lt; (wallPositions[i + 1] &#8211; 1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 # We have a gap<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 heightDiff = abs(wallHeights[i + 1] &#8211; wallHeights[i])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 gapLen = wallPositions[i + 1] &#8211; wallPositions[i] &#8211; 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 localMax = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 if gapLen &gt; heightDiff:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 low = max(wallHeights[i + 1], wallHeights[i]) + 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 remainingGap = gapLen &#8211; heightDiff &#8211; 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 localMax = low + remainingGap \/ 2<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 else:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 localMax = min(wallHeights[i + 1], wallHeights[i]) + gapLen<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 mud_max = max(mud_max, localMax)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return int(mud_max)<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Duplicated_Products\"><\/span><span style=\"color: #000000;\"><strong>Duplicated Products<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">public static int numDuplicates(List name, List price, List weight) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Set uniqueProducts = new HashSet();<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i = 0; i &lt; name.size(); i++)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 uniqueProducts.add(name.get(i) + \" \" + price.get(i) + \" \" + weight.get(i));<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return name.size() &#8211; uniqueProducts.size();<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"4th_Bit\"><\/span><span style=\"color: #000000;\"><strong>4th Bit<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 3<\/strong><\/span><\/p><p><span style=\"color: #000000;\">def fourthBit(num):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 number = bin(num).replace(\"0b\", \"\")<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 string1 = str(number)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return string1[-4]<\/span><\/p><p><span style=\"color: #000000;\"><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Balanced_Array\"><\/span><span style=\"color: #000000;\"><strong>Balanced Array<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>Python 3<\/strong><\/span><\/p><p><span style=\"color: #000000;\">def balancedSum(arr):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n=len(arr)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 prefixSum = [0] * n<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 prefixSum[0] = arr[0]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(1, n) :<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 prefixSum[i] = prefixSum[i &#8211; 1] + arr[i]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 suffixSum = [0] * n<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 suffixSum[n &#8211; 1] = arr[n &#8211; 1]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(n &#8211; 2, -1, -1) :<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 suffixSum[i] = suffixSum[i + 1] + arr[i]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(1, n &#8211; 1, 1) :<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if prefixSum[i] == suffixSum[i] :<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return i<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return -1<\/span><\/p><p><span style=\"color: #000000;\"><strong>____________________________________________________________________________<\/strong><\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Triangle_or_Not\"><\/span><span style=\"color: #000000;\"><strong>Triangle or Not &#8211;<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">import java.io.*;<\/span><\/p><p><span style=\"color: #000000;\">import java.util.*;<\/span><\/p><p><span style=\"color: #000000;\">import java.text.*;<\/span><\/p><p><span style=\"color: #000000;\">import java.math.*;<\/span><\/p><p><span style=\"color: #000000;\">import java.util.regex.*;<\/span><\/p><p><span style=\"color: #000000;\">public class Solution {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 static boolean solve(int a,int b,int c){<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[] arr=new int[]{a,b,c};<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Arrays.sort(arr);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(arr[0]+arr[1]&gt;arr[2])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return true;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return false;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 static String[] triangleOrNot(int[] a, int[] b, int[] c) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int n=a.length;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String[] res=new String[n];<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0;i&lt;n;i++){<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 res[i]=solve(a[i],b[i],c[i])==true?\"Yes\":\"No\";<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return res;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 public static void main(String[] args) throws IOException {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Scanner in = new Scanner(System.in);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 final String fileName = System.getenv(\"OUTPUT_PATH\");<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BufferedWriter bw = null;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (fileName != null) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bw = new BufferedWriter(new FileWriter(fileName));<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bw = new BufferedWriter(new OutputStreamWriter(System.out));<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String[] res;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int a_size = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a_size = Integer.parseInt(in.nextLine().trim());<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[] a = new int[a_size];<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i = 0; i &lt; a_size; i++) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int a_item;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a_item = Integer.parseInt(in.nextLine().trim());<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a[i] = a_item;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int b_size = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 b_size = Integer.parseInt(in.nextLine().trim());<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[] b = new int[b_size];<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i = 0; i &lt; b_size; i++) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int b_item;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 b_item = Integer.parseInt(in.nextLine().trim());<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 b[i] = b_item;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int c_size = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c_size = Integer.parseInt(in.nextLine().trim());<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[] c = new int[c_size];<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i = 0; i &lt; c_size; i++) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int c_item;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c_item = Integer.parseInt(in.nextLine().trim());<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c[i] = c_item;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 res = triangleOrNot(a, b, c);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int res_i = 0; res_i &lt; res.length; res_i++) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bw.write(String.valueOf(res[res_i]));<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bw.newLine();<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bw.close();<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Duplicate_products\"><\/span><span style=\"color: #000000;\"><strong>Duplicate products<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">int numDuplicates(vector name, vector price, vector weight) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int count=0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 string product=\"\";<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 unordered_map&lt;string,int&gt;freq;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0;i&lt;name.size();i++)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 product=name[i]+\" \"+to_string(price[i])+\" \"+to_string(weight[i]);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(freq[product])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 freq[product]++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return count;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Circular_Printer\"><\/span><span style=\"color: #000000;\"><strong>Circular Printer<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">sum=0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sum+=(min(abs(ord('A')-ord(s[0])),26-abs(ord('A')-ord(s[0]))))<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(len(s)-1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sum+=(min(abs(ord(s[i])-ord(s[i+1])),26-abs(ord(s[i])-ord(s[i+1]))))<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return sum<\/span><\/p><p><span style=\"color: #000000;\">Bit Logic<\/span><\/p><p><span style=\"color: #000000;\">flag = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(lo&lt;hi):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(lo+1,hi+1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp = lo^i<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(temp&gt;flag and temp&lt;=k):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 flag = temp<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 lo+=1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return flag<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Largest_String\"><\/span><span style=\"color: #000000;\"><strong>Largest String<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">#!\/bin\/python3<\/span><\/p><p><span style=\"color: #000000;\">import math<\/span><\/p><p><span style=\"color: #000000;\">import os<\/span><\/p><p><span style=\"color: #000000;\">import random<\/span><\/p><p><span style=\"color: #000000;\">import re<\/span><\/p><p><span style=\"color: #000000;\">import sys<\/span><\/p><p><span style=\"color: #000000;\">#<\/span><\/p><p><span style=\"color: #000000;\"># Complete the 'getLargestString' function below.<\/span><\/p><p><span style=\"color: #000000;\">#<\/span><\/p><p><span style=\"color: #000000;\"># The function is expected to return a STRING.<\/span><\/p><p><span style=\"color: #000000;\"># The function accepts following parameters:<\/span><\/p><p><span style=\"color: #000000;\">#\u00a0 1. STRING s<\/span><\/p><p><span style=\"color: #000000;\">#\u00a0 2. INTEGER k<\/span><\/p><p><span style=\"color: #000000;\">#<\/span><\/p><p><span style=\"color: #000000;\">def getLargestString(word, k):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 countArr = [0]*26<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a, ans = ord('a'), []<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for c in word:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 countArr[ord(c)-a] += 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i = 25 # start at z<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Now we have count of all chars we start from z to a.<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while i &gt;= 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # More chars than the window permits<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if countArr[i] &gt; k:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Lets append k letters if they exist.<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 letter = chr(i+a)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ans.append(letter*k)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 countArr[i] -= k<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # look for the next element<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 j = i-1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(countArr[j] &lt;= 0 and j&gt;0):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 j -= 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # add one of the next element<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if countArr[j] &gt; 0 and j &gt;= 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 letter = chr(j+a)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 ans.append(letter)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 countArr[j] -= 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 break # we cant build string more.<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 elif countArr[i] &gt; 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 letter = chr(i+a)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ans.append(letter*countArr[i])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 countArr[i] = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:\u00a0 # this letter we can't do anything, lets skip<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i -= 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # print(\".join(ans))<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return \".join(ans)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Write your code here<\/span><\/p><p><span style=\"color: #000000;\">if _name_ == '_main_':<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fptr = open(os.environ['OUTPUT_PATH'], 'w')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s = input()<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 k = int(input().strip())<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 result = getLargestString(s, k)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fptr.write(result + '\\n')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fptr.close()<\/span><\/p><p><span style=\"color: #000000;\">\u00a0<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Character_Reprogramming-2\"><\/span><span style=\"color: #000000;\"><strong>Character Reprogramming<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\"><strong>C<\/strong><\/span><\/p><p><span style=\"color: #000000;\">int getMaxDeletions(char* s)<\/span><\/p><p><span style=\"color: #000000;\">{<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i = 0, size = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(s[i] != '\\0')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 size++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int *array;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 array = calloc(size, sizeof(int));<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(s[i] != '\\0')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(s[i] == 'U')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 array[i] = 1;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(s[i] == 'D')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 array[i] = -1;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(s[i] == 'R')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 array[i] = 2;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(s[i] == 'L')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 array[i] = -2;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int Ucounter = 0; int Rcounter = 0; int Dcounter = 0; int Lcounter = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(i &lt; size)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(array[i] == 1)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Ucounter++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(array[i] == -1)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Dcounter++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(array[i] == 2)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Rcounter++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(array[i] == -2)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Lcounter++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i++;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int answer = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Ucounter&gt;= Dcounter)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 answer = answer + Dcounter;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 answer = answer + Ucounter;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Rcounter &gt;= Lcounter)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 answer = answer+Lcounter;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 answer = answer+Rcounter;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 2*answer;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Reverse_Queries\"><\/span><span style=\"color: #000000;\"><strong>Reverse Queries<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">for i in operations:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x = i[0]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y = i[1]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp = arr[x:y+1]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp = temp[::-1]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(x,y+1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arr[i] = temp[i-x]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return arr<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Cutting_Metal_Surpulus\"><\/span><span style=\"color: #000000;\"><strong>Cutting Metal Surpulus<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">#include &lt;bits\/stdc++.h&gt;<\/span><\/p><p><span style=\"color: #000000;\">using namespace std;<\/span><\/p><p><span style=\"color: #000000;\">int solve(vector &amp;rods, int sz, int cpc, int sl) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int pr = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int r : rods) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int temp = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(r%sz == 0) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp += ((r\/sz) * sz * sl) &#8211; (r\/sz &#8211; 1) * cpc;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } else {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp += ((r\/sz) * sz * sl) &#8211; (r\/sz) * cpc;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(temp &gt; 0) pr += temp;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return pr;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><p><span style=\"color: #000000;\">int main() {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int n;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int cpc , sl;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cin &gt;&gt; cpc &gt;&gt; sl;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cin &gt;&gt; n;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 vector v(n);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int maxlen = 0;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i&lt;n; i++) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cin &gt;&gt; v[i];<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 maxlen = max(maxlen, v[i]);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int ans = INT_MIN;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int sz=1; sz&lt;=maxlen; sz++) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int prof = solve(v, sz, cpc, sl);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ans = max(prof, ans);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout &lt;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 0;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Fixbuzz\"><\/span><span style=\"color: #000000;\"><strong>Fixbuzz<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">def fizzbuzz(n):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if n % 3 == 0 and n % 5 == 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('FizzBuzz')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 elif n % 3 == 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('Fizz')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 elif n % 5 == 0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print('Buzz')<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print(n)<\/span><\/p><p><span style=\"color: #000000;\">x=(int)(input())<\/span><\/p><p><span style=\"color: #000000;\">for i in range(1,x+1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fizzbuzz(i)<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"find_the_factor\"><\/span><span style=\"color: #000000;\"><strong>find the factor<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">from math import sqrt<\/span><\/p><p><span style=\"color: #000000;\">l=[]<\/span><\/p><p><span style=\"color: #000000;\">def pthFactor(n, p):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 k=int(sqrt(n))+1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in range(1,k,1):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if n%i==0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l.append(i)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(i!=sqrt(n)):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 l.append(int(n\/i))<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l.sort(reverse=False)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(p&gt;len(l)):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print(\"0\")<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 print(l[p-1])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">n=int(input())<\/span><\/p><p><span style=\"color: #000000;\">p=int(input())<\/span><\/p><p><span style=\"color: #000000;\">pthFactor(n,p)<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Condensed_List\"><\/span><span style=\"color: #000000;\"><strong>Condensed List<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">SinglyLinkedListNode* condense(SinglyLinkedListNode* head) {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 struct SinglyLinkedListNode *p;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 unordered_set s;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p=head;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s.insert(head-&gt;data);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(p!=NULL &amp;&amp; p-&gt;next!=NULL)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(s.find(p-&gt;next-&gt;data)==s.end())<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s.insert(p-&gt;next-&gt;data);<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p=p-&gt;next;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else {<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p-&gt;next=p-&gt;next-&gt;next;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (auto it = s.begin(); it !=s.end(); ++it)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout &lt;&lt; ' ' &lt;&lt; *it;<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return head;<\/span><\/p><p><span style=\"color: #000000;\">}<\/span><\/p><h1><span class=\"ez-toc-section\" id=\"i-34\"><\/span>\u00a0<span class=\"ez-toc-section-end\"><\/span><\/h1><h2><span class=\"ez-toc-section\" id=\"No_paired_allowed\"><\/span><span style=\"color: #000000;\"><strong>No paired allowed<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">def minimalOperations(word_collection):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 counter = []<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for words in word_collection:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 words = list(words)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 count = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i = 0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while i &lt; len(words)-1:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if words[i] == words[i+1]:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 count += 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 i += 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i += 1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 counter.append(count)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return counter<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"Product_Sort\"><\/span><span style=\"color: #000000;\"><strong>Product Sort<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">def itemsSort(items):<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l=items.copy()<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 r=[]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s=[]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l=set(l)\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in l:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c=items.count(i)<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s.append([c,i])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s.sort(key=lambda x:x[0])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for i in s:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 q=i[0]<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while q!=0:<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 r.append(i[1])<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 q-=1<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return r<\/span><\/p><h2><span class=\"ez-toc-section\" id=\"arrange_the_words\"><\/span><span style=\"color: #000000;\"><strong>arrange the words<\/strong><\/span><span class=\"ez-toc-section-end\"><\/span><\/h2><p><span style=\"color: #000000;\">import re<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0<\/span><\/p><p><span style=\"color: #000000;\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sentence_rgx = re.compile(r'^[A-Z][a-z ]*\\.<\/span><\/p>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t","protected":false},"excerpt":{"rendered":"<p>count string permutation \u00a0 def countPerms(n):# Write your code hereMOD = 1e9+7dp=[[0 for i in range(5)] for j in range(n+1)]for i in range(5):dp[1][i]=1relation = [[1],[0,2],[0,1,3,4],[2,4],[0]]for i in range(1,n,1):for u in range(5):dp[i+1][u]=0for v in relation[u]:dp[i+1][u]+=dp[i][v]%MODans=0for i in range(5):ans = (ans + dp[n][i]) % MODreturn int(ans) \u00a0 traffic \u00a0 select b.visited_on, avg(b.time_spent) over(order by b.visited_on rows between&hellip;&nbsp;<a href=\"https:\/\/srmnotesadda.in\/hackerrank-srm-ccc-all-solutions\/\" class=\"\" rel=\"bookmark\">Read More &raquo;<span class=\"screen-reader-text\">Hackerrank SRM CCC All Solutions<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"neve_meta_sidebar":"","neve_meta_container":"","neve_meta_enable_content_width":"","neve_meta_content_width":0,"neve_meta_title_alignment":"","neve_meta_author_avatar":"","neve_post_elements_order":"","neve_meta_disable_header":"","neve_meta_disable_footer":"","neve_meta_disable_title":"","jetpack_post_was_ever_published":false},"categories":[28],"tags":[],"jetpack_featured_media_url":"","_links":{"self":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts\/1833"}],"collection":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/comments?post=1833"}],"version-history":[{"count":74,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts\/1833\/revisions"}],"predecessor-version":[{"id":1909,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts\/1833\/revisions\/1909"}],"wp:attachment":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/media?parent=1833"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/categories?post=1833"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/tags?post=1833"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}