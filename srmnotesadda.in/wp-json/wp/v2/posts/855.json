{"id":855,"date":"2020-08-11T12:41:09","date_gmt":"2020-08-11T12:41:09","guid":{"rendered":"https:\/\/vtreviews.in\/?p=855"},"modified":"2021-09-29T15:16:29","modified_gmt":"2021-09-29T15:16:29","slug":"stack","status":"publish","type":"post","link":"https:\/\/srmnotesadda.in\/stack\/","title":{"rendered":"Stack"},"content":{"rendered":"\t\t<div data-elementor-type=\"wp-post\" data-elementor-id=\"855\" class=\"elementor elementor-855\">\n\t\t\t\t\t\t<div class=\"elementor-inner\">\n\t\t\t\t<div class=\"elementor-section-wrap\">\n\t\t\t\t\t\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-25e8821 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"25e8821\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-e142869\" data-id=\"e142869\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-5afeff3 elementor-widget elementor-widget-text-editor\" data-id=\"5afeff3\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_36_1 counter-hierarchy ez-toc-counter ez-toc-grey ez-toc-container-direction\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a href=\"#\" class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><label for=\"item\" aria-label=\"Table of Content\"><span style=\"display: flex;align-items: center;width: 35px;height: 30px;justify-content: center;\"><svg style=\"fill: #999;color:#999\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" class=\"list-377408\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\"><path d=\"M6 6H4v2h2V6zm14 0H8v2h12V6zM4 11h2v2H4v-2zm16 0H8v2h12v-2zM4 16h2v2H4v-2zm16 0H8v2h12v-2z\" fill=\"currentColor\"><\/path><\/svg><svg style=\"fill: #999;color:#999\" class=\"arrow-unsorted-368013\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"10px\" height=\"10px\" viewBox=\"0 0 24 24\" version=\"1.2\" baseProfile=\"tiny\"><path d=\"M18.2 9.3l-6.2-6.3-6.2 6.3c-.2.2-.3.4-.3.7s.1.5.3.7c.2.2.4.3.7.3h11c.3 0 .5-.1.7-.3.2-.2.3-.5.3-.7s-.1-.5-.3-.7zM5.8 14.7l6.2 6.3 6.2-6.3c.2-.2.3-.5.3-.7s-.1-.5-.3-.7c-.2-.2-.4-.3-.7-.3h-11c-.3 0-.5.1-.7.3-.2.2-.3.5-.3.7s.1.5.3.7z\"\/><\/svg><\/span><\/label><input type=\"checkbox\" id=\"item\"><\/a><\/span><\/div>\n<nav><ul class='ez-toc-list ez-toc-list-level-1' ><li class='ez-toc-page-1 ez-toc-heading-level-2'><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/srmnotesadda.in\/stack\/#Table_of_Content\" title=\"Table of Content\">Table of Content<\/a><ul class='ez-toc-list-level-3'><li class='ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST1\" title=\"ST1\">ST1<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST3\" title=\"ST3\">ST3<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST4\" title=\"ST4\">ST4<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST6\" title=\"ST6\">ST6<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST8\" title=\"ST8\">ST8<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST9\" title=\"ST9\">ST9<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-8\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST10\" title=\"ST10\">ST10<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-9\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST11\" title=\"ST11\">ST11<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-10\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST12\" title=\"ST12\">ST12<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-11\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST13\" title=\"ST13\">ST13<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-12\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST14\" title=\"ST14\">ST14<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-13\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST15\" title=\"ST15\">ST15<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-14\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST16\" title=\"ST16\">ST16<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-15\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST19\" title=\"ST19\">ST19<\/a><\/li><li class='ez-toc-page-1 ez-toc-heading-level-3'><a class=\"ez-toc-link ez-toc-heading-16\" href=\"https:\/\/srmnotesadda.in\/stack\/#ST20\" title=\"ST20\">ST20<\/a><\/li><\/ul><\/li><\/ul><\/nav><\/div>\n<h2 style=\"text-align: center;\"><span class=\"ez-toc-section\" id=\"Table_of_Content\"><\/span><strong>Table of Content<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2><ul><li><a href=\"#1\">ST 1<\/a><\/li><li><a href=\"#3\">ST 3<\/a><\/li><li><a href=\"#4\">ST 4<\/a><\/li><li><a href=\"#6\">ST 6<\/a><\/li><li><a href=\"#8\">ST 8<\/a><\/li><li><a href=\"#9\">ST 9<\/a><\/li><li><a href=\"#10\">ST 10<\/a><\/li><li><a href=\"#11\">ST 11<\/a><\/li><li><a href=\"#12\">ST 12<\/a><\/li><li><a href=\"#13\">ST 13<\/a><\/li><li><a href=\"#14\">ST 14<\/a><\/li><li><a href=\"#15\">ST 15<\/a><\/li><li><a href=\"#16\">ST 16<\/a><\/li><li><a href=\"#19\">ST 19<\/a><\/li><li><a href=\"#20\">ST 20<\/a><\/li><\/ul>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-5ffb84b elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"5ffb84b\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c5887d8\" data-id=\"c5887d8\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-aa8d83c elementor-widget elementor-widget-menu-anchor\" data-id=\"aa8d83c\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"1\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-bc428a7 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"bc428a7\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-3d716bf elementor-widget elementor-widget-text-editor\" data-id=\"3d716bf\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST1\"><\/span>ST1<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\"><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3qN8uMR\">Click here to avail the offer price!<\/a><\/strong><\/p><p style=\"text-align: center;\"><a href=\"https:\/\/amzn.to\/3qN8uMR\"><img decoding=\"async\" class=\"wp-image-1290 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41W5NMZsJL-300x261.jpg\" alt=\"\" width=\"254\" height=\"221\" data-wp-editing=\"1\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41W5NMZsJL-300x261.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41W5NMZsJL.jpg 500w\" sizes=\"(max-width: 254px) 100vw, 254px\" \/><\/a>Use the code: miru2021<\/p><\/div><\/div><div id=\"post-body-6533853727532444288\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>\/\/ C program to sort a stack using recursion<br \/>#include <br \/>#include<\/p><p>\/\/ Stack is represented using linked list<br \/>struct stack<br \/>{<br \/>\u00a0 \u00a0 int data;<br \/>\u00a0 \u00a0 struct stack *next;<br \/>};<\/p><p>\/\/ Utility function to initialize stack<br \/>void initStack(struct stack **s)<br \/>{<br \/>\u00a0 \u00a0 *s = NULL;<br \/>}<\/p><p>\/\/ Utility function to chcek if stack is empty<br \/>int isEmpty(struct stack *s)<br \/>{<br \/>\u00a0 \u00a0 if (s == NULL)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 return 1;<br \/>\u00a0 \u00a0 return 0;<br \/>}<\/p><p>\/\/ Utility function to push an item to stack<br \/>void push(struct stack **s, int x)<br \/>{<br \/>\u00a0 \u00a0 struct stack *p = (struct stack *)malloc(sizeof(*p));<\/p><p>\u00a0 \u00a0 if (p == NULL)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 fprintf(stderr, \"Memory allocation failed.\\n\");<br \/>\u00a0 \u00a0 \u00a0 \u00a0 return;<br \/>\u00a0 \u00a0 }<\/p><p>\u00a0 \u00a0 p-&gt;data = x;<br \/>\u00a0 \u00a0 p-&gt;next = *s;<br \/>\u00a0 \u00a0 *s = p;<br \/>}<\/p><p>\/\/ Utility function to remove an item from stack<br \/>int pop(struct stack **s)<br \/>{<br \/>\u00a0 \u00a0 int x;<br \/>\u00a0 \u00a0 struct stack *temp;<\/p><p>\u00a0 \u00a0 x = (*s)-&gt;data;<br \/>\u00a0 \u00a0 temp = *s;<br \/>\u00a0 \u00a0 (*s) = (*s)-&gt;next;<br \/>\u00a0 \u00a0 free(temp);<\/p><p>\u00a0 \u00a0 return x;<br \/>}<\/p><p>\/\/ Function to find top item<br \/>int top(struct stack *s)<br \/>{<br \/>\u00a0 \u00a0 return (s-&gt;data);<br \/>}<\/p><p>\/\/ Recursive function to insert an item x in sorted way<br \/>void sortedInsert(struct stack **s, int x)<br \/>{<br \/>\u00a0 \u00a0 \/\/ Base case: Either stack is empty or newly inserted<br \/>\u00a0 \u00a0 \/\/ item is greater than top (more than all existing)<br \/>\u00a0 \u00a0 if (isEmpty(*s) || x &gt; top(*s))<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 push(s, x);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 return;<br \/>\u00a0 \u00a0 }<\/p><p>\u00a0 \u00a0 \/\/ If top is greater, remove the top item and recur<br \/>\u00a0 \u00a0 int temp = pop(s);<br \/>\u00a0 \u00a0 sortedInsert(s, x);<\/p><p>\u00a0 \u00a0 \/\/ Put back the top item removed earlier<br \/>\u00a0 \u00a0 push(s, temp);<br \/>}<\/p><p>\/\/ Function to sort stack<br \/>void sortStack(struct stack **s)<br \/>{<br \/>\u00a0 \u00a0 \/\/ If stack is not empty<br \/>\u00a0 \u00a0 if (!isEmpty(*s))<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ Remove the top item<br \/>\u00a0 \u00a0 \u00a0 \u00a0 int x = pop(s);<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ Sort remaining stack<br \/>\u00a0 \u00a0 \u00a0 \u00a0 sortStack(s);<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ Push the top item back in sorted stack<br \/>\u00a0 \u00a0 \u00a0 \u00a0 sortedInsert(s, x);<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p>\/\/ Utility function to print contents of stack<br \/>void printStack(struct stack *s)<br \/>{<br \/>\u00a0 \u00a0 while (s)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 printf(\"%d \", s-&gt;data);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 s = s-&gt;next;<br \/>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 printf(\"\\n\");<br \/>}<\/p><p>\/\/ Driver Program<br \/>int main()<br \/>{<br \/>int n,i;<br \/>\u00a0 \u00a0 scanf(\"%d\",&amp;n);<br \/>\u00a0 \u00a0 int arr[n];<br \/>\u00a0 \u00a0 for(i=0;i&lt;n;i++)<br \/>\u00a0 \u00a0 scanf(\"%d\",&amp;arr[i]);<\/p><p>struct stack *top;<\/p><p>\u00a0 \u00a0 initStack(&amp;top);<br \/>\u00a0 \u00a0 for(i=0;i&lt;n;i++)<br \/>\u00a0 \u00a0 push(&amp;top,arr[i]);<\/p><p>\u00a0 \u00a0 printf(\"Stack elements before sorting:\\n\");<br \/>\u00a0 \u00a0 printStack(top);<\/p><p>\u00a0 \u00a0 sortStack(&amp;top);<br \/>\u00a0 \u00a0\/\/ printf(\"\\n\");<\/p><p>\u00a0 \u00a0 printf(\"Stack elements after sorting:\\n\");<br \/>\u00a0 \u00a0 printStack(top);<\/p><p>\u00a0 \u00a0 return 0;<br \/>}<\/p><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3hyIaCc\">Click on the image !\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/3hyIaCc\"><img decoding=\"async\" class=\"size-medium wp-image-1283 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61cD3XdlzzL._SL1136_-285x300.jpg\" alt=\"\" width=\"285\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61cD3XdlzzL._SL1136_-285x300.jpg 285w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61cD3XdlzzL._SL1136_-973x1024.jpg 973w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61cD3XdlzzL._SL1136_-768x809.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61cD3XdlzzL._SL1136_.jpg 1079w\" sizes=\"(max-width: 285px) 100vw, 285px\" \/><\/a><\/p><p style=\"text-align: center;\"><span style=\"color: #000000;\">Use the code: Miru2021<\/span><\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-a2591dd elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"a2591dd\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-55c42cf\" data-id=\"55c42cf\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-739ca9c elementor-widget elementor-widget-menu-anchor\" data-id=\"739ca9c\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"3\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-7ecd61c elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"7ecd61c\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-7bd9c66 elementor-widget elementor-widget-text-editor\" data-id=\"7bd9c66\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST3\"><\/span>ST3<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-8360558869014030800\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include <br \/>using namespace std;<br \/>struct MYStack<br \/>{<br \/>int info;<br \/>\u00a0\u00a0 MYStack *next;<br \/>}*top,*newptr,*save,*ptr;<br \/>MYStack *Newnode(int);<br \/>void Push(MYStack*);<br \/>void pop();<br \/>void findMiddle(MYStack *);<br \/>void display(MYStack*);<\/p><p>void deleteMiddle();<br \/>int main() {<br \/>int inf,n,i;<br \/>\u00a0\u00a0 cin&gt;&gt;n;<br \/>\u00a0\u00a0 top=NULL;<br \/>\u00a0\u00a0 if(2&lt;1)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 cout&lt;&lt;\"struct MYStack *createMyStack ()\";<br \/>\u00a0 \u00a0 }<br \/>\u00a0\u00a0 for(i=0;i&lt;n;i++)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 cin&gt;&gt;inf;<br \/>\u00a0 \u00a0 \u00a0\u00a0 newptr=Newnode(inf);<br \/>\u00a0 \u00a0 \u00a0\u00a0 Push(newptr);<br \/>\u00a0 \u00a0 }<br \/>\u00a0\u00a0 \/\/display(top);<br \/>\u00a0\u00a0 if(2&lt;1)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 cout&lt;&lt;\"struct MYStack *createMyStack()\";<br \/>\u00a0 \u00a0 }<br \/>\u00a0\u00a0 pop();<br \/>\u00a0\u00a0 pop();<br \/>\u00a0\u00a0 findMiddle(top);<br \/>return 0;<br \/>}<\/p><p>MYStack *Newnode(int n)<br \/>{<br \/>ptr=new MYStack;<br \/>\u00a0\u00a0 ptr-&gt;info=n;<br \/>\u00a0\u00a0 ptr-&gt;next=NULL;<br \/>\u00a0\u00a0 return ptr;<br \/>}<\/p><p>void Push(MYStack *np)<br \/>{<br \/>if(top==NULL)<br \/>\u00a0 \u00a0 \u00a0\u00a0 top=np;<br \/>\u00a0\u00a0 else<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 save=top;<br \/>\u00a0 \u00a0 \u00a0\u00a0 top=np;<br \/>\u00a0 \u00a0 \u00a0\u00a0 np-&gt;next=save;<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p>void pop()<br \/>{<br \/>if(top==NULL)<br \/>\u00a0 \u00a0 \u00a0\u00a0 cout&lt;&lt;\"UNDERFLOW\";<br \/>\u00a0\u00a0 else<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 cout&lt;&lt;\"Item popped is \"&lt;info&lt;&lt;endl;<br \/>\u00a0 \u00a0 \u00a0\u00a0 ptr=top;<br \/>\u00a0 \u00a0 \u00a0\u00a0 top=top-&gt;next;<br \/>\u00a0 \u00a0 \u00a0\u00a0 delete ptr;<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p>void display(MYStack *np)<br \/>{<br \/>while(np!=NULL)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 cout&lt;info&lt;&lt;\"-&gt;\";<br \/>\u00a0 \u00a0 \u00a0\u00a0 np=np-&gt;next;<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p>void findMiddle(MYStack *np)<br \/>{<br \/>MYStack *t;<br \/>\u00a0\u00a0 t=np;<br \/>\u00a0\u00a0 int n=0;<br \/>\u00a0\u00a0 while(t!=NULL)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0\u00a0 n++;<br \/>\u00a0 \u00a0 \u00a0\u00a0 t=t-&gt;next;<br \/>\u00a0 \u00a0 }<br \/>\u00a0\u00a0 n=n\/2;<br \/>\u00a0\u00a0 t=np;<br \/>\u00a0\u00a0 while(n&#8211;)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 t=t-&gt;next;<br \/>\u00a0 \u00a0 }<br \/>\u00a0\u00a0 cout&lt;&lt;\"Middle Element is \"&lt;info;<br \/>}<\/p><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3hgxPvu\">Click here Amazon Best selling product\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/3hgxPvu\"><img decoding=\"async\" class=\"size-medium wp-image-1279 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-300x300.jpg\" alt=\"\" width=\"300\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-300x300.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-150x150.jpg 150w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-768x768.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_.jpg 1000w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><p style=\"text-align: center;\">Code : Miru2021<\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-ec26fdb elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"ec26fdb\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-d814c8a\" data-id=\"d814c8a\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-e6e5ddd elementor-widget elementor-widget-menu-anchor\" data-id=\"e6e5ddd\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"4\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-1e9e8fb elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"1e9e8fb\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-6206bff elementor-widget elementor-widget-text-editor\" data-id=\"6206bff\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST4\"><\/span>ST4<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-7544884106420138152\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include<\/p><p>\/\/ Fills array S[] with span values<br \/>void calculateSpan(int price[], int n, int S[])<br \/>{<br \/>\/\/ Span value of first day is always 1<br \/>S[0] = 1;<\/p><p>\/\/ Calculate span value of remaining days by linearly checking<br \/>\/\/ previous days<br \/>int i;<br \/>for ( i = 1; i &lt; n; i++)<br \/>{<br \/>S[i] = 1; \/\/ Initialize span value<\/p><p>\/\/ Traverse left while the next element on left is smaller<br \/>\/\/ than price[i]<br \/>int j;<br \/>for ( j = i-1; (j&gt;=0)&amp;&amp;(price[i]&gt;=price[j]); j&#8211;)<br \/>S[i]++;<br \/>}<br \/>}<\/p><p>\/\/ A utility function to print elements of array<br \/>void printArray(int arr[], int n)<br \/>{<br \/>int i;<br \/>for ( i = 0; i &lt; n; i++)<br \/>printf(\"%d \", arr[i]);<br \/>}<\/p><p>\/\/ Driver program to test above function<br \/>int main()<br \/>{<br \/>int size,i,q,price[100];<br \/>scanf(\"%d\",&amp;size);<br \/>for(i=0;i&lt;size;i++)<br \/>{<br \/>scanf(\"%d\",&amp;price[i]);<br \/>}<br \/>int n = (4*size)\/sizeof(price[0]);<br \/>int S[n];<\/p><p>\/\/ Fill the span values in array S[]<br \/>calculateSpan(price, n, S);<\/p><p>\/\/ print the calculated span values<br \/>printArray(S, n);<\/p><p>return 0;<br \/>}<\/p><p style=\"text-align: center;\"><a href=\"https:\/\/amzn.to\/2Tub6Dp\"><strong>Best and gaming mouse pad\u00a0<\/strong><\/a><\/p><p><a href=\"https:\/\/amzn.to\/2Tub6Dp\"><img decoding=\"async\" class=\"size-medium wp-image-1317 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61G5-hNFMYL._SL1000_-300x300.jpg\" alt=\"\" width=\"300\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61G5-hNFMYL._SL1000_-300x300.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61G5-hNFMYL._SL1000_-150x150.jpg 150w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61G5-hNFMYL._SL1000_-768x768.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61G5-hNFMYL._SL1000_.jpg 1000w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-5c3912e elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"5c3912e\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-96f7f27\" data-id=\"96f7f27\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-b67c515 elementor-widget elementor-widget-menu-anchor\" data-id=\"b67c515\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"6\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-c03a714 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"c03a714\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-d7c3498 elementor-widget elementor-widget-text-editor\" data-id=\"d7c3498\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST6\"><\/span>ST6<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-7323594455048115197\" class=\"post-body entry-content\"><div dir=\"ltr\">#include&lt;iostream&gt;<br \/>using namespace std;<br \/><br \/>char pop();<br \/>void push(char);<br \/><br \/>int main()<br \/>{<br \/>int i,j,len,flag=1;<br \/>char a[20];<br \/>\u00a0 \u00a0<br \/>\/\/cout&lt;&lt;\"Enter a string:\";<br \/>cin&gt;&gt;a;<br \/>\u00a0 \u00a0<br \/>for(len=0;a[len]!='\\0';++len);<br \/>\u00a0<br \/>for(i=0,j=len-1;i&lt;len\/2;++i,&#8211;j)<br \/>{<br \/>if(a[j]!=a[i])<br \/>flag=0;<br \/>}<br \/>\u00a0<br \/>if(flag==1)<br \/>{<br \/>cout&lt;&lt;a&lt;&lt;\" is a Palindrome string\";<br \/>}<br \/>else<br \/>{<br \/>cout&lt;&lt;a&lt;&lt;\" is not a palindrome string\";<br \/>}<br \/>return 0;<br \/>}<\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-442eda8 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"442eda8\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-a6b3e6e\" data-id=\"a6b3e6e\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-158620e elementor-widget elementor-widget-menu-anchor\" data-id=\"158620e\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"8\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-701d135 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"701d135\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-992558b elementor-widget elementor-widget-text-editor\" data-id=\"992558b\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST8\"><\/span>ST8<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\"><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3xl9muC\">Tap here to buy !\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/3xl9muC\"><img decoding=\"async\" class=\"size-medium wp-image-1282 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41ysoC0mdHL-300x221.jpg\" alt=\"\" width=\"300\" height=\"221\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41ysoC0mdHL-300x221.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41ysoC0mdHL.jpg 500w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><p style=\"text-align: center;\"><span style=\"color: #000000;\">Use the code : Miru2021<\/span><\/p><\/div><\/div><div id=\"post-body-3702114247936871662\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include <br \/>#include <br \/>#include <br \/>#include <br \/>struct Stack<br \/>{<br \/>\u00a0 \u00a0 int top;<br \/>\u00a0 \u00a0 unsigned capacity;<br \/>\u00a0 \u00a0 int* array;<br \/>};<br \/>struct Stack* MakeStack(unsigned capacity)<br \/>{<br \/>\u00a0 \u00a0 struct Stack* stack = (struct Stack*) malloc(sizeof(struct Stack));<br \/>\u00a0 \u00a0 if (!stack) return NULL;<br \/>\u00a0 \u00a0 stack-&gt;top = -1;<br \/>\u00a0 \u00a0 stack-&gt;capacity = capacity;<br \/>\u00a0 \u00a0 stack-&gt;array = (int*) malloc(stack-&gt;capacity * sizeof(int));<br \/>\u00a0 \u00a0 if (!stack-&gt;array) return NULL;<br \/>\u00a0 \u00a0 return stack;<br \/>}<\/p><p>int isEmpty(struct Stack* stack)<br \/>{<br \/>\u00a0 \u00a0 return stack-&gt;top == -1 ;<br \/>}<br \/>char peek(struct Stack* stack)<br \/>{<br \/>\u00a0 \u00a0 return stack-&gt;array[stack-&gt;top];<br \/>}<br \/>char pop(struct Stack* stack)<br \/>{<br \/>\u00a0 \u00a0 if (!isEmpty(stack))<br \/>\u00a0 \u00a0 \u00a0 \u00a0 return stack-&gt;array[stack-&gt;top&#8211;] ;<br \/>\u00a0 \u00a0 return '<\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-76b1399 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"76b1399\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-2d932c8\" data-id=\"2d932c8\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-2f16874 elementor-widget elementor-widget-menu-anchor\" data-id=\"2f16874\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"9\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-2665b12 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"2665b12\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-0ba3057 elementor-widget elementor-widget-text-editor\" data-id=\"0ba3057\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST9\"><\/span>ST9<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-1699578579089095798\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include&lt;bits\/stdc++.h&gt;<br \/>using namespace std;<br \/>\u00a0 struct STACK<br \/>\u00a0 {};<br \/>\/\/Function to return precedence of operators<br \/>int prec(char c)<br \/>{<br \/>\u00a0 \u00a0 if(c == '^')<br \/>\u00a0 \u00a0 return 3;<br \/>\u00a0 \u00a0 else if(c == '*' || c == '\/')<br \/>\u00a0 \u00a0 return 2;<br \/>\u00a0 \u00a0 else if(c == '+' || c == '-')<br \/>\u00a0 \u00a0 return 1;<br \/>\u00a0 \u00a0 else<br \/>\u00a0 \u00a0 return -1;<br \/>}<\/p><p>\/\/ The main function to convert infix expression<br \/>\/\/to postfix expression<br \/>void infixToPostfix(string s)<br \/>{<br \/>\u00a0 \u00a0 std::stack st;<br \/>\u00a0 \u00a0 st.push('N');<br \/>\u00a0 \u00a0 int l = s.length();<br \/>\u00a0 \u00a0 string ns;<br \/>\u00a0 \u00a0 for(int i = 0; i &lt; l; i++)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ If the scanned character is an operand, add it to output string.<br \/>\u00a0 \u00a0 \u00a0 \u00a0 if((s[i] &gt;= 'a' &amp;&amp; s[i] &lt;= 'z')||(s[i] &gt;= 'A' &amp;&amp; s[i] &lt;= 'Z'))<br \/>\u00a0 \u00a0 \u00a0 \u00a0 ns+=s[i];<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ If the scanned character is an '(', push it to the stack.<br \/>\u00a0 \u00a0 \u00a0 \u00a0 else if(s[i] == '(')<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 st.push('(');<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ If the scanned character is an ')', pop and to output string from the stack<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \/\/ until an '(' is encountered.<br \/>\u00a0 \u00a0 \u00a0 \u00a0 else if(s[i] == ')')<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 while(st.top() != 'N' &amp;&amp; st.top() != '(')<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 char c = st.top();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 st.pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0ns += c;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(st.top() == '(')<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 char c = st.top();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 st.pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 \/\/If an operator is scanned<br \/>\u00a0 \u00a0 \u00a0 \u00a0 else{<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 while(st.top() != 'N' &amp;&amp; prec(s[i]) &lt;= prec(st.top()))<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 char c = st.top();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 st.pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ns += c;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 st.push(s[i]);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<\/p><p>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \/\/Pop all the remaining elements from the stack<br \/>\u00a0 \u00a0 while(st.top() != 'N')<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 char c = st.top();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 st.pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 ns += c;<br \/>\u00a0 \u00a0 }<\/p><p>\u00a0 \u00a0 cout &lt;&lt; ns &lt;&lt; endl;<\/p><p>}<\/p><p>\/\/Driver program to test above functions<br \/>int main()<br \/>{<br \/>\u00a0 \u00a0 string exp ;<br \/>\u00a0 cin&gt;&gt;exp;<br \/>\u00a0 \u00a0 infixToPostfix(exp);<br \/>\u00a0 \u00a0 return 0;<br \/>}\u00a0<\/p><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/2VdP8oJ\">Tap on the image<\/a><\/strong><\/p><h3><a href=\"https:\/\/amzn.to\/2VdP8oJ\"><img decoding=\"async\" class=\"size-medium wp-image-1286 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51516PxSL._SL1500_-293x300.jpg\" alt=\"\" width=\"293\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51516PxSL._SL1500_-293x300.jpg 293w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51516PxSL._SL1500_-1000x1024.jpg 1000w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51516PxSL._SL1500_-768x786.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51516PxSL._SL1500_.jpg 1465w\" sizes=\"(max-width: 293px) 100vw, 293px\" \/><\/a><\/h3><p style=\"text-align: center;\"><span style=\"color: #000000;\">Use the code: Miru2021<\/span><\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-d5d2652 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"d5d2652\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-1262dd5\" data-id=\"1262dd5\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-b723d12 elementor-widget elementor-widget-menu-anchor\" data-id=\"b723d12\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"10\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-9f63279 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"9f63279\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-ebda7ca elementor-widget elementor-widget-text-editor\" data-id=\"ebda7ca\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST10\"><\/span>ST10<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-3306549213707610252\" class=\"post-body entry-content\"><div dir=\"ltr\">#include &lt;iostream&gt;<br \/>#include &lt;string&gt;<br \/>#include &lt;stack&gt;<br \/>using namespace std;<br \/>struct Stack* createSt(unsigned cap);<br \/>int main()<br \/>{<br \/>stack&lt;char&gt; stk;<br \/>string str;<br \/>\u00a0\u00a0 cin &gt;&gt; str;<br \/>for(int i = 0; i &lt; str.length(); i++)<br \/>stk.push(str.at(i));<br \/><br \/>string reverse;<br \/>while(!stk.empty())<br \/>{<br \/>reverse.push_back(stk.top());<br \/>stk.pop();<br \/>}<br \/><br \/>cout&lt;&lt;\"Reversed string is \"&lt;&lt;reverse&lt;&lt;endl;<br \/>return 0;<br \/>}<\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-c1337f3 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"c1337f3\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-76a907f\" data-id=\"76a907f\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-6a3ec86 elementor-widget elementor-widget-menu-anchor\" data-id=\"6a3ec86\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"11\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-78824d8 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"78824d8\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-f58a5ae elementor-widget elementor-widget-text-editor\" data-id=\"f58a5ae\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST11\"><\/span>ST11<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-1214243490416138098\" class=\"post-body entry-content\"><div dir=\"ltr\">#include<br \/>#include <br \/>struct node<br \/>{<br \/>\u00a0 int data;<br \/>\u00a0 struct node *next;<br \/>};<br \/>struct node *top;<br \/>void push1(int x)<br \/>{<br \/>\u00a0 struct node *new_node;<br \/>\u00a0 new_node=(struct node*)malloc(sizeof(struct node));<br \/>\u00a0 new_node-&gt;data=x;<br \/>\u00a0 new_node-&gt;next=top;<br \/>\u00a0 top=new_node;<br \/>}<br \/>void push2(int x)<br \/>{<br \/>\u00a0 struct node *new_node;<br \/>\u00a0 new_node=(struct node*)malloc(sizeof(struct node));<br \/>\u00a0 new_node-&gt;data=x;<br \/>\u00a0 new_node-&gt;next=top;<br \/>\u00a0 top=new_node;<br \/>}<br \/>int pop1()<br \/>{<br \/>\u00a0 int ele;<br \/>\u00a0 struct node *newtop;<br \/>\u00a0 newtop=top;<br \/>\u00a0 ele=top-&gt;data;<br \/>\u00a0 top=top-&gt;next;<br \/>\u00a0 free(newtop);<br \/>\u00a0 return ele;<br \/>}<br \/>int pop2()<br \/>{<br \/>\u00a0 int element;<br \/>\u00a0 struct node *newtop2;<br \/>\u00a0 newtop2=top;<br \/>\u00a0 element=top-&gt;data;<br \/>\u00a0 top=top-&gt;next;<br \/>\u00a0 free(newtop2);<br \/>\u00a0 return element;<br \/>}<br \/>int main()<br \/>{<br \/>\u00a0 int n,a[10],b[10],i,j;<br \/>\u00a0 scanf(\"%d\",&amp;n);<br \/>\u00a0 for(i=0;i&lt;n;i++)<br \/>\u00a0 {<br \/>\u00a0 \u00a0 scanf(\"%d\",&amp;a[i]);<br \/>\u00a0 \u00a0 push1(a[i]);<br \/>\u00a0 }<br \/>\u00a0 printf(\"Popped element from stack1 is %d\\n\",pop1());<br \/>\u00a0 for(j=0;j&lt;n;j++)<br \/>\u00a0 {<br \/>\u00a0 \u00a0 scanf(\"%d\",&amp;b[j]);<br \/>\u00a0 \u00a0 push2(b[j]);<br \/>\u00a0 }<br \/>\u00a0 printf(\"Popped element from stack2 is %d\\n\",pop2());<br \/>\u00a0 return 0;<br \/>}<\/div><div dir=\"ltr\"><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3hk5fcW\">Stunning Keyboard and Mouse\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/3hk5fcW\"><img decoding=\"async\" class=\"size-medium wp-image-1320 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61drIizdNL._SL1200_-300x300.jpg\" alt=\"\" width=\"300\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61drIizdNL._SL1200_-300x300.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61drIizdNL._SL1200_-1024x1024.jpg 1024w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61drIizdNL._SL1200_-150x150.jpg 150w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61drIizdNL._SL1200_-768x768.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61drIizdNL._SL1200_.jpg 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><p>\u00a0<\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-576dfda elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"576dfda\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3b765d3\" data-id=\"3b765d3\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-7b72ebc elementor-widget elementor-widget-menu-anchor\" data-id=\"7b72ebc\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"12\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-95d246e elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"95d246e\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-592e23a elementor-widget elementor-widget-text-editor\" data-id=\"592e23a\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST12\"><\/span>ST12<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-8376126564727534230\" class=\"post-body entry-content\"><div dir=\"ltr\">#include &lt;iostream&gt;<br \/>using namespace std;<br \/>int stack[100], top=-1, size;<br \/>void push(int &amp;top,int n)<br \/>{<br \/>cout &lt;&lt; \"\";<br \/>}<br \/>void push()<br \/>{<br \/>\u00a0 if(top==size-1)<br \/>\u00a0 \u00a0 cout&lt;&lt;\"Stack Overflow\"&lt;&lt;endl;<br \/>\u00a0 else<br \/>\u00a0 {<br \/>\u00a0 \u00a0 top++;<br \/>\u00a0 \u00a0 cin&gt;&gt;stack[top];<br \/>\u00a0 }<br \/>}<br \/>void pop()<br \/>{<br \/>\u00a0 if(top==-1)<br \/>\u00a0 \u00a0 cout&lt;&lt;\"Stack underflow\"&lt;&lt;endl;<br \/>\u00a0 else<br \/>\u00a0 {<br \/>\u00a0 \u00a0 cout&lt;&lt;\"deleted element is\"&lt;&lt;stack[top]&lt;&lt;endl;<br \/>\u00a0 \u00a0 top&#8211;;<br \/>\u00a0 }<br \/>}<br \/>void print()<br \/>{<br \/>\u00a0 int i;<br \/>\u00a0 for(i=top;i&gt;=0;i&#8211;)<br \/>\u00a0 \u00a0 cout&lt;&lt; \" \" &lt;&lt;stack[i]&lt;&lt;\"\";<br \/>\u00a0 cout&lt;&lt;endl;<br \/>}<br \/>int main()<br \/>{<br \/>\u00a0 char opt;<br \/>\u00a0 int o;<br \/>\u00a0 cin&gt;&gt;size;<br \/>\u00a0 do<br \/>\u00a0 {<br \/>\u00a0 \u00a0 cin&gt;&gt;o;<br \/>\u00a0 \u00a0 switch(o)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 case 1:<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 push();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 break;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 case 2:<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 break;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 cin&gt;&gt;opt;<br \/>\u00a0 }while(opt=='y');<br \/>\u00a0 print();<br \/>\u00a0 return 0;<br \/>}<\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-a4bf56f elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"a4bf56f\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-4af1281\" data-id=\"4af1281\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-d4bd29e elementor-widget elementor-widget-menu-anchor\" data-id=\"d4bd29e\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"13\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-73c7573 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"73c7573\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-3f18236 elementor-widget elementor-widget-text-editor\" data-id=\"3f18236\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST13\"><\/span>ST13<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\"><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3dHOUws\">Best router for gamers\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/3dHOUws\"><img decoding=\"async\" class=\"size-medium wp-image-1322 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51ax8peHlPL._SL1000_-300x300.jpg\" alt=\"\" width=\"300\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51ax8peHlPL._SL1000_-300x300.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51ax8peHlPL._SL1000_-150x150.jpg 150w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51ax8peHlPL._SL1000_-768x768.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51ax8peHlPL._SL1000_.jpg 1000w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><\/div><\/div><div id=\"post-body-1304121997431342039\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include<br \/>#include<br \/>#define bool int<\/p><p>struct sNode<br \/>{<br \/>char data;<br \/>struct sNode *next;<br \/>};<\/p><p>void push(struct sNode** top_ref,<br \/>int new_data);<br \/>int pop(struct sNode** top_ref);<br \/>bool isEmpty(struct sNode* top);<br \/>void Display(struct sNode* top);<\/p><p>void insertAtBottom(struct sNode** top_ref,int item)<br \/>{<br \/>if (isEmpty(*top_ref))<br \/>push(top_ref, item);<br \/>else<br \/>{\u00a0<br \/>int temp = pop(top_ref);<br \/>insertAtBottom(top_ref, item);<\/p><p>push(top_ref, temp);<br \/>}<br \/>}<\/p><p>void reverse(struct sNode** top_ref)<br \/>{<br \/>if (!isEmpty(*top_ref))<br \/>{\u00a0<br \/>int temp = pop(top_ref);<br \/>reverse(top_ref);<\/p><p>insertAtBottom(top_ref, temp);<br \/>}<br \/>}<\/p><p>int main()<br \/>{<br \/>struct sNode *s = NULL;<br \/>\u00a0\u00a0 int n;<br \/>\u00a0\u00a0 scanf(\"%d\",&amp;n);<br \/>\u00a0\u00a0 while(n&#8211;)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 int t;<br \/>\u00a0 \u00a0 \u00a0 scanf(\"%d\",&amp;t);<br \/>\u00a0 push(&amp;s, t);<br \/>\u00a0 \u00a0 }<\/p><p>printf(\"\\nOriginal Stack \");<br \/>Display(s);<br \/>reverse(&amp;s);<br \/>printf(\"\\nReversed Stack \");<br \/>Display(s);<br \/>return 0;<br \/>}<\/p><p>bool isEmpty(struct sNode* top)<br \/>{<br \/>return (top == NULL)? 1 : 0;<br \/>}<\/p><p>void push(struct sNode** top_ref,int new_data)<br \/>{\u00a0 <br \/>struct sNode* new_node = (struct sNode*) malloc(sizeof(struct sNode));<\/p><p>if (new_node == NULL)<br \/>{<br \/>printf(\"Stack overflow \\n\");<br \/>exit(0);<br \/>}<\/p><p>new_node-&gt;data = new_data;<\/p><p>new_node-&gt;next = (*top_ref);<\/p><p>(*top_ref) = new_node;<br \/>}<\/p><p>int pop(struct sNode** top_ref)<br \/>{<br \/>char res;<br \/>struct sNode *top;<\/p><p>if (*top_ref == NULL)<br \/>{<br \/>printf(\"Stack overflow \\n\");<br \/>exit(0);<br \/>}<br \/>else<br \/>{<br \/>top = *top_ref;<br \/>res = top-&gt;data;<br \/>*top_ref = top-&gt;next;<br \/>free(top);<br \/>return res;<br \/>}<br \/>}<\/p><p>void Display(struct sNode* top)<br \/>{<br \/>printf(\"\\n\");<br \/>while (top != NULL)<br \/>{<br \/>printf(\"%d \", top-&gt;data);<br \/>top = top-&gt;next;<br \/>}<br \/>}\u00a0<\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-533ae24 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"533ae24\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-80bf49d\" data-id=\"80bf49d\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-76abb13 elementor-widget elementor-widget-menu-anchor\" data-id=\"76abb13\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"14\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-f5370e2 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"f5370e2\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-a2d307d elementor-widget elementor-widget-text-editor\" data-id=\"a2d307d\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST14\"><\/span>ST14<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-7452274262527155372\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include <br \/>using namespace std;<br \/>struct MYStack<br \/>{<br \/>int info;<br \/>\u00a0\u00a0 MYStack *next;<br \/>}*top,*newptr,*save,*ptr;<br \/>MYStack *Newnode(int);<br \/>void push(MYStack*);<br \/>void *createMyStack();<br \/>void delet();<br \/>void display(MYStack*);<br \/>void\u00a0 DELETE()<br \/>{}<br \/>void PUSH1()<br \/>{}<br \/>void POP()<br \/>{}<br \/>const int size=50;<br \/>int x,n=100;<br \/>int main() {<br \/>int c,v;<br \/>\u00a0\u00a0 top=NULL;<br \/>\u00a0\u00a0 char ch='y';<br \/>\u00a0\u00a0 cin&gt;&gt;v;<br \/>\u00a0\u00a0 newptr=Newnode(v);<br \/>\u00a0 \u00a0 push(newptr);<br \/>\u00a0\u00a0 while(ch=='y' || ch=='Y')<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0\u00a0 cin&gt;&gt;c;<br \/>\u00a0 \u00a0 \u00a0\u00a0 switch(c)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0\u00a0 case 1: {\u00a0<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cin&gt;&gt;x;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 newptr=Newnode(x);<br \/>\u00a0 \u00a0 \u00a0\u00a0 push(newptr);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 break;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 case 2: {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 delet();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 break;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 case 3: {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 display(top);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 break;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 default: {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cout&lt;&lt;\"Invalid Choice\"&lt;&lt;endl;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0} <br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0\u00a0 cin&gt;&gt;ch;<br \/>\u00a0 \u00a0 }<br \/>return 0;<br \/>}<\/p><p>MYStack *Newnode(int n)<br \/>{<br \/>ptr=new MYStack;<br \/>\u00a0\u00a0 ptr-&gt;info=n;<br \/>\u00a0\u00a0 ptr-&gt;next=NULL;<br \/>\u00a0\u00a0 return ptr;<br \/>}<\/p><p>void push(MYStack *np)<br \/>{<br \/>if(top==NULL)<br \/>\u00a0 \u00a0 \u00a0\u00a0 top=np;<br \/>\u00a0\u00a0 else<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 save=top;<br \/>\u00a0 \u00a0 \u00a0\u00a0 top=np;<br \/>\u00a0 \u00a0 \u00a0\u00a0 np-&gt;next=save;<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p>void delet()<br \/>{<br \/>if(top==NULL)<br \/>\u00a0 \u00a0 \u00a0\u00a0 cout&lt;&lt;\"UNDERFLOW\";<br \/>\u00a0\u00a0 else<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0\u00a0 cout&lt;&lt;\"deleted element is \"&lt;info&lt;&lt;endl;<br \/>\u00a0 \u00a0 \u00a0\u00a0 ptr=top;<br \/>\u00a0 \u00a0 \u00a0\u00a0 top=top-&gt;next;<br \/>\u00a0 \u00a0 \u00a0\u00a0 delete ptr;<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p>void display(MYStack *np)<br \/>{<br \/>if(top==NULL)<br \/>\u00a0 \u00a0 \u00a0\u00a0 cout&lt;&lt;\"Underflow\";<br \/>\u00a0\u00a0 else<br \/>\u00a0 \u00a0 {<br \/>\u00a0\u00a0 cout&lt;&lt;\"status of the stack is\"&lt;&lt;endl;<br \/>\u00a0\u00a0 while(np!=NULL)<br \/>\u00a0 \u00a0\u00a0 {<br \/>\u00a0 \u00a0\u00a0 cout&lt;info&lt;&lt;\"-&gt;\";<br \/>\u00a0 \u00a0 \u00a0\u00a0 np=np-&gt;next;<br \/>\u00a0 \u00a0\u00a0 }<br \/>\u00a0\u00a0 cout&lt;&lt;\"!\";<br \/>\u00a0 \u00a0 }<br \/>}<\/p><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/2Tu6wVL\">Click ont the image to know more !\u00a0<\/a><\/strong><\/p><p style=\"text-align: center;\"><a href=\"https:\/\/amzn.to\/2Tu6wVL\"><img decoding=\"async\" class=\"size-medium wp-image-1280 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41UYenFlnL-300x263.jpg\" alt=\"\" width=\"300\" height=\"263\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41UYenFlnL-300x263.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/41UYenFlnL.jpg 500w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/>Use the code : Miru2021<\/a><\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-02621d4 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"02621d4\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-c65edfc\" data-id=\"c65edfc\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-44dafd2 elementor-widget elementor-widget-menu-anchor\" data-id=\"44dafd2\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"15\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-91eeea2 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"91eeea2\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-c1b77e4 elementor-widget elementor-widget-text-editor\" data-id=\"c1b77e4\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST15\"><\/span>ST15<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-7311760160681095004\" class=\"post-body entry-content\"><div dir=\"ltr\">#include &lt;iostream&gt;<br \/>using namespace std;<br \/>int maxSum(int stack1[], int stack2[], int stack3[],int n1, int n2, int n3)<br \/>{<br \/>int sum1 = 0, sum2 = 0, sum3 = 0;<br \/>for (int i=0; i &lt; n1; i++)<br \/>sum1 += stack1[i];<br \/>for (int i=0; i &lt; n2; i++)<br \/>sum2 += stack2[i];<br \/>for (int i=0; i &lt; n3; i++)<br \/>sum3 += stack3[i];<br \/>int top1 =0, top2 = 0, top3 = 0;<br \/>int ans = 0;<br \/>while(1)<br \/>{ <br \/>if (top1 == n1 || top2 == n2 || top3 == n3)<br \/>return 0;<br \/>if (sum1 == sum2 &amp;&amp; sum2 == sum3)<br \/>return sum1;<br \/>if (sum1 &gt;= sum2 &amp;&amp; sum1 &gt;= sum3)<br \/>sum1 -= stack1[top1++];<br \/>else if (sum2 &gt;= sum3 &amp;&amp; sum2 &gt;= sum3)<br \/>sum2 -= stack2[top2++];<br \/>else if (sum3 &gt;= sum2 &amp;&amp; sum3 &gt;= sum1)<br \/>sum3 -= stack3[top3++];<br \/>}<br \/>}<br \/>int main()<br \/>{<br \/>\u00a0 int x,y,z;<br \/>\u00a0 cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;<br \/>\u00a0 int stack1[x],stack2[y],stack3[z];<br \/>\u00a0 for(int i=0;i&lt;x;i++)<br \/>\u00a0 \u00a0 cin &gt;&gt; stack1[i];<br \/>\u00a0 for(int i=0;i&lt;y;i++)<br \/>\u00a0 \u00a0 cin &gt;&gt; stack2[i];<br \/>\u00a0 for(int i=0;i&lt;z;i++)<br \/>\u00a0 \u00a0 cin &gt;&gt; stack3[i];\\<br \/>\u00a0 cout &lt;&lt; maxSum(stack1,stack2,stack3,x,y,z);<br \/>\u00a0 return 0;<br \/>}<\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-7b539b8 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"7b539b8\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5d4803b\" data-id=\"5d4803b\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-b974c27 elementor-widget elementor-widget-menu-anchor\" data-id=\"b974c27\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"16\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-b7d707a elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"b7d707a\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-120f4f9 elementor-widget elementor-widget-text-editor\" data-id=\"120f4f9\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST16\"><\/span>ST16<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-9070663081438902970\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include&lt;bits\/stdc++.h&gt;<br \/>using namespace std;<\/p><p>struct tNode1<br \/>{<br \/>\u00a0 \u00a0 int data;<br \/>\u00a0 \u00a0 struct tNode1* left;<br \/>\u00a0 \u00a0 struct tNode1* right;<br \/>\u00a0 \u00a0 tNode1 (int data)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 this-&gt;data = data;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 left = right = NULL;<br \/>\u00a0 \u00a0 }<br \/>};<\/p><p>void inOrder(struct tNode1 *root)<br \/>{<br \/>\u00a0 \u00a0 stack s;<br \/>\u00a0 \u00a0 tNode1 *curr = root;<\/p><p>\u00a0 \u00a0 while (curr != NULL || s.empty() == false)<br \/>\u00a0 \u00a0 {<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 while (curr !=\u00a0 NULL)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 s.push(curr);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 curr = curr-&gt;left;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 curr = s.top();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 s.pop();<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 cout &lt;&lt; curr-&gt;data &lt;&lt; \" \";<\/p><p>\u00a0 \u00a0 \u00a0 \u00a0 curr = curr-&gt;right;<\/p><p>\u00a0 \u00a0 }<br \/>}<\/p><p>int main()<br \/>{ int i,j,k,l,m;<br \/>\u00a0cin&gt;&gt;i&gt;&gt;j&gt;&gt;k&gt;&gt;l&gt;&gt;m;<\/p><p>\u00a0 \u00a0 struct tNode1 *root = new tNode1(i);<br \/>\u00a0 \u00a0 root-&gt;left\u00a0 \u00a0 \u00a0 \u00a0 = new tNode1(j);<br \/>\u00a0 \u00a0 root-&gt;right\u00a0 \u00a0 \u00a0 \u00a0= new tNode1(k);<br \/>\u00a0 \u00a0 root-&gt;left-&gt;left\u00a0 = new tNode1(l);<br \/>\u00a0 \u00a0 root-&gt;left-&gt;right = new tNode1(m);<\/p><p>\u00a0 \u00a0 inOrder(root);<br \/>\u00a0 \u00a0 return 0;<br \/>}\u00a0<\/p><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/3hgxPvu\">Click here Amazon Best selling product\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/3hgxPvu\"><img decoding=\"async\" class=\"size-medium wp-image-1279 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-300x300.jpg\" alt=\"\" width=\"300\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-300x300.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-150x150.jpg 150w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_-768x768.jpg 768w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/61WUqJd4dfS._SL1000_.jpg 1000w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><p style=\"text-align: center;\">Code: Miru2021<\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-1f18c07 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"1f18c07\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-e702fd0\" data-id=\"e702fd0\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-fd71131 elementor-widget elementor-widget-menu-anchor\" data-id=\"fd71131\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"19\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-eee7519 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"eee7519\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-67b3723 elementor-widget elementor-widget-text-editor\" data-id=\"67b3723\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST19\"><\/span>ST19<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-2395936347207944859\" class=\"post-body entry-content\"><div dir=\"ltr\">#include &lt;iostream&gt;<br \/>#include &lt;vector&gt;<br \/>#include &lt;stack&gt;<br \/><br \/>using namespace std;<br \/><br \/>int main()<br \/>{<br \/>\u00a0 \u00a0 int q, n, v;<br \/>\u00a0 \u00a0 vector&lt;int&gt; primes;<br \/>\u00a0 \u00a0 primes.push_back(2);<br \/>\u00a0 \u00a0 primes.push_back(3);<br \/>\u00a0 \u00a0 for(int i = 5; i &lt;= 10000; i++)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 int no = 0;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 for(int j = 2; j*j &lt;= i; j++)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(i%j == 0)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 no = 1;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 if(!no)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 primes.push_back(i);<br \/>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 cin&gt;&gt;n&gt;&gt;q;<br \/>\u00a0 \u00a0 stack&lt;int&gt; stack1, stack2, stack3;<br \/>\u00a0 \u00a0 for(int i = 0 ; i &lt; n; i++)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 cin&gt;&gt;v;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 stack1.push(v);<br \/>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 for(int i = 0 ; i &lt; q; i++)<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 if(stack1.empty())<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 break;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 int cur = primes[i];<br \/>\u00a0 \u00a0 \u00a0 \u00a0 while(!stack1.empty())<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 int ele = stack1.top();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stack1.pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(ele%cur == 0)<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stack2.push(ele);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stack3.push(ele);<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 while(!stack2.empty())<br \/>\u00a0 \u00a0 \u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cout&lt;&lt;stack2.top()&lt;&lt;endl;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stack2.pop();<br \/>\u00a0 \u00a0 \u00a0 \u00a0 }<br \/>\u00a0 \u00a0 \u00a0 \u00a0 stack1 = stack3;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 while(!stack3.empty())<br \/>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stack3.pop();<br \/>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 while(!stack1.empty())<br \/>\u00a0 \u00a0 {<br \/>\u00a0 \u00a0 \u00a0 \u00a0 cout&lt;&lt;stack1.top()&lt;&lt;endl;<br \/>\u00a0 \u00a0 \u00a0 \u00a0 stack1.pop();<br \/>\u00a0 \u00a0 }<br \/>\u00a0 \u00a0 return 0;<br \/>}<\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t<section class=\"elementor-section elementor-top-section elementor-element elementor-element-27a5fb0 elementor-section-boxed elementor-section-height-default elementor-section-height-default\" data-id=\"27a5fb0\" data-element_type=\"section\">\n\t\t\t\t\t\t<div class=\"elementor-container elementor-column-gap-default\">\n\t\t\t\t\t\t\t<div class=\"elementor-row\">\n\t\t\t\t\t<div class=\"elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6f9e221\" data-id=\"6f9e221\" data-element_type=\"column\">\n\t\t\t<div class=\"elementor-column-wrap elementor-element-populated\">\n\t\t\t\t\t\t\t<div class=\"elementor-widget-wrap\">\n\t\t\t\t\t\t<div class=\"elementor-element elementor-element-368a4fb elementor-widget elementor-widget-menu-anchor\" data-id=\"368a4fb\" data-element_type=\"widget\" data-widget_type=\"menu-anchor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div id=\"20\" class=\"elementor-menu-anchor\"><\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-e9840b6 elementor-widget-divider--view-line elementor-widget elementor-widget-divider\" data-id=\"e9840b6\" data-element_type=\"widget\" data-widget_type=\"divider.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t<div class=\"elementor-divider\">\n\t\t\t<span class=\"elementor-divider-separator\">\n\t\t\t\t\t\t<\/span>\n\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"elementor-element elementor-element-bb98d4e elementor-widget elementor-widget-text-editor\" data-id=\"bb98d4e\" data-element_type=\"widget\" data-widget_type=\"text-editor.default\">\n\t\t\t\t<div class=\"elementor-widget-container\">\n\t\t\t\t\t\t\t\t<div class=\"elementor-text-editor elementor-clearfix\">\n\t\t\t\t<h3 class=\"post-title entry-title\"><span class=\"ez-toc-section\" id=\"ST20\"><\/span>ST20<span class=\"ez-toc-section-end\"><\/span><\/h3><div class=\"post-header\"><div class=\"post-header-line-1\">\u00a0<\/div><\/div><div id=\"post-body-4053347302040580203\" class=\"post-body entry-content\"><div dir=\"ltr\"><p>#include <br \/>#include<\/p><p>\/\/ Maximum stack size<br \/>#define MAX_SIZE 100<\/p><p>\/\/ A tree node<br \/>struct Node<br \/>{<br \/>int data;<br \/>struct Node *left, *right;<br \/>};<\/p><p>\/\/ Stack type<br \/>struct Stack<br \/>{<br \/>int size;<br \/>int top;<br \/>struct Node* *array;<br \/>};<\/p><p>\/\/ A utility function to create a new tree node<br \/>struct Node* newNode(int data)<br \/>{<br \/>struct Node* node = (struct Node*) malloc(sizeof(struct Node));<br \/>node-&gt;data = data;<br \/>node-&gt;left = node-&gt;right = NULL;<br \/>return node;<br \/>}<\/p><p>\/\/ A utility function to create a stack of given size<br \/>struct Stack* createStack(int size)<br \/>{<br \/>struct Stack* stack = (struct Stack*) malloc(sizeof(struct Stack));<br \/>stack-&gt;size = size;<br \/>stack-&gt;top = -1;<br \/>stack-&gt;array = (struct Node**) malloc(stack-&gt;size * sizeof(struct Node*));<br \/>return stack;<br \/>}<\/p><p>\/\/ BASIC OPERATIONS OF STACK<br \/>int isFull(struct Stack* stack)<br \/>{ return stack-&gt;top &#8211; 1 == stack-&gt;size; }<\/p><p>int isEmpty(struct Stack* stack)<br \/>{ return stack-&gt;top == -1; }<\/p><p>void push(struct Stack* stack, struct Node* node)<br \/>{<br \/>if (isFull(stack))<br \/>return;<br \/>stack-&gt;array[++stack-&gt;top] = node;<br \/>}<\/p><p>struct Node* pop(struct Stack* stack)<br \/>{<br \/>if (isEmpty(stack))<br \/>return NULL;<br \/>return stack-&gt;array[stack-&gt;top&#8211;];<br \/>}<\/p><p>struct Node* peek(struct Stack* stack)<br \/>{<br \/>if (isEmpty(stack))<br \/>return NULL;<br \/>return stack-&gt;array[stack-&gt;top];<br \/>}<\/p><p style=\"text-align: center;\"><strong><a href=\"https:\/\/amzn.to\/36axxQG\">Tap on the image to see\u00a0<\/a><\/strong><\/p><p><a href=\"https:\/\/amzn.to\/36axxQG\"><img decoding=\"async\" class=\"size-medium wp-image-1284 aligncenter\" src=\"http:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51z1PYYltL-300x300.jpg\" alt=\"\" width=\"300\" height=\"300\" srcset=\"https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51z1PYYltL-300x300.jpg 300w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51z1PYYltL-150x150.jpg 150w, https:\/\/srmnotesadda.in\/wp-content\/uploads\/2021\/07\/51z1PYYltL.jpg 500w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p><p style=\"text-align: center;\"><span style=\"color: #000000;\">Use the code: Miru2021<\/span><\/p><p>\/\/ An iterative function to do postorder traversal of a given binary tree<br \/>void postOrderIterative(struct Node* root)<br \/>{<br \/>\/\/ Check for empty tree<br \/>if (root == NULL)<br \/>return;<\/p><p>struct Stack* stack = createStack(MAX_SIZE);<br \/>do<br \/>{<br \/>\/\/ Move to leftmost node<br \/>while (root)<br \/>{<br \/>\/\/ Push root's right child and then root to stack.<br \/>if (root-&gt;right)<br \/>push(stack, root-&gt;right);<br \/>push(stack, root);<\/p><p>\/\/ Set root as root's left child<br \/>root = root-&gt;left;<br \/>}<\/p><p>\/\/ Pop an item from stack and set it as root <br \/>root = pop(stack);<\/p><p>\/\/ If the popped item has a right child and the right child is not<br \/>\/\/ processed yet, then make sure right child is processed before root<br \/>if (root-&gt;right &amp;&amp; peek(stack) == root-&gt;right)<br \/>{<br \/>pop(stack); \/\/ remove right child from stack<br \/>push(stack, root); \/\/ push root back to stack<br \/>root = root-&gt;right; \/\/ change root so that the right<br \/>\/\/ child is processed next<br \/>}<br \/>else \/\/ Else print root's data and set root as NULL<br \/>{<br \/>printf(\"%d \", root-&gt;data);<br \/>root = NULL;<br \/>}<br \/>} while (!isEmpty(stack));<br \/>}<\/p><p>\/\/ Driver program to test above functions<br \/>int main()<br \/>{<br \/>\/\/ Let us construct the tree shown in above figure<br \/>struct Node* root = NULL;<br \/>\u00a0\u00a0 int x;<br \/>\u00a0 \u00a0 scanf(\"%d\",&amp;x);<br \/>root = newNode(x);<br \/>root-&gt;left = newNode(x+1);<br \/>root-&gt;right = newNode(x+2);<br \/>root-&gt;left-&gt;left = newNode(x+3);<br \/>root-&gt;left-&gt;right = newNode(x+4);<br \/>root-&gt;right-&gt;left = newNode(x+5);<br \/>root-&gt;right-&gt;right = newNode(x+6);<br \/>printf(\"Post order traversal of binary tree is :\\n\");<br \/>printf(\"[\");<br \/>postOrderIterative(root);<br \/>printf(\"]\");<\/p><p>return 0;<br \/>}<\/p><\/div><\/div>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t<\/section>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t","protected":false},"excerpt":{"rendered":"<p>Table of Content ST 1 ST 3 ST 4 ST 6 ST 8 ST 9 ST 10 ST 11 ST 12 ST 13 ST 14 ST 15 ST 16 ST 19 ST 20 ST1 Click here to avail the offer price! Use the code: miru2021 \/\/ C program to sort a stack using recursion#include #include&hellip;&nbsp;<a href=\"https:\/\/srmnotesadda.in\/stack\/\" class=\"\" rel=\"bookmark\">Read More &raquo;<span class=\"screen-reader-text\">Stack<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"neve_meta_sidebar":"","neve_meta_container":"","neve_meta_enable_content_width":"off","neve_meta_content_width":0,"neve_meta_title_alignment":"","neve_meta_author_avatar":"","neve_post_elements_order":"","neve_meta_disable_header":"","neve_meta_disable_footer":"","neve_meta_disable_title":"","jetpack_post_was_ever_published":false},"categories":[28],"tags":[],"jetpack_featured_media_url":"","_links":{"self":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts\/855"}],"collection":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/comments?post=855"}],"version-history":[{"count":3,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts\/855\/revisions"}],"predecessor-version":[{"id":1713,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/posts\/855\/revisions\/1713"}],"wp:attachment":[{"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/media?parent=855"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/categories?post=855"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/srmnotesadda.in\/wp-json\/wp\/v2\/tags?post=855"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}